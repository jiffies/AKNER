poj1141	eng	B-OJ
 	x	O
-	x	O
 	x	O
mengxm	eng	O
 	x	O
-	x	O
 	x	O
博客园	nr	O

	x	O

	x	O
http	eng	O
:	x	O
/	x	O
/	x	O
poj	eng	O
.	m	O
org	eng	O
/	x	O
problem	eng	O
?	x	O
id	eng	O
=	x	O
1141	m	O

	x	O
黑	a	O
书	n	O
动态	n	O
规划	n	O
第一道	m	O
题目	n	O
，	x	O
书	n	O
中	f	O
只	d	O
给	p	O
了求	v	O
最小	a	O
添	v	O
括号	n	O
数	m	O
的	uj	O
方法	n	O
，	x	O
输出	v	O
形式	n	O
有	v	O
自己	r	O
想	v	O
，	x	O
有	v	O
两种	m	O
解决	v	O
方法	n	O
，	x	O
一个	m	O
是	v	O
记忆	n	O
化	n	O
搜索	v	O
，	x	O
一个	m	O
是	v	O
递推	v	O
，	x	O
我	r	O
采用	v	O
的	uj	O
是	v	O
前者	n	O
，	x	O
不过	c	O
大多数	m	O
代码	n	O
采用	v	O
的	uj	O
是	v	O
后者	n	O
，	x	O
输出	v	O
形式	n	O
就	d	O
我	r	O
所	u	O
见	v	O
也	d	O
有	v	O
两种	m	O
，	x	O
我	r	O
的	uj	O
是	v	O
每	r	O
一个	m	O
节点	n	O
都	d	O
记录	n	O
自己	r	O
的	uj	O
括号	n	O
字符串	n	O
，	x	O
另	r	O
一种	m	O
是	v	O
用	p	O
数字	n	O
代表	n	O
某种意义	v	O
，	x	O
然后	c	O
递归	v	O
输出	v	O
，	x	O
先	d	O
给	p	O
我	r	O
的	uj	O
代码	n	O
，	x	O
如果	c	O
你	r	O
有	v	O
错误	n	O
不	d	O
知道	v	O
在	p	O
哪里	r	O
，	x	O
是	v	O
一下	m	O
这	r	O
组	v	O
数据	n	O
【	x	O
】	x	O
【	x	O
】	x	O

	x	O
 	x	O

	x	O
 	x	O

	x	O
 	x	O
 	x	O
1	x	O
 	x	O
#	x	O
include	eng	O
 	x	O
<	x	O
stdio	eng	O
.	m	O
h	eng	O
>	x	O

	x	O
 	x	O
2	x	O
 	x	O
#	x	O
include	eng	O
 	x	O
<	x	O
string	eng	O
.	m	O
h	eng	O
>	x	O

	x	O
 	x	O
3	x	O
 	x	O
#	x	O
include	eng	O
 	x	O
<	x	O
iostream	eng	O
>	x	O

	x	O
 	x	O
4	x	O
 	x	O
#	x	O
include	eng	O
 	x	O
<	x	O
stdlib	eng	O
.	m	O
h	eng	O
>	x	O

	x	O
 	x	O
5	x	O
 	x	O
using	eng	O
 	x	O
namespace	eng	O
 	x	O
std	eng	O
;	x	O

	x	O
 	x	O
6	x	O
 	x	O
char	eng	O
 	x	O
str	eng	O
[	x	O
110	m	O
]	x	O
;	x	O

	x	O
 	x	O
7	x	O
 	x	O
struct	eng	O
 	x	O
node	eng	O

	x	O
 	x	O
8	x	O
 	x	O
{	x	O

	x	O
 	x	O
9	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
char	eng	O
 	x	O
str	eng	O
[	x	O
210	m	O
]	x	O
;	x	O

	x	O
10	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
int	eng	O
 	x	O
num	eng	O
,	x	O
len	eng	O
;	x	O

	x	O
11	m	O
 	x	O
}	x	O
map	eng	O
[	x	O
110	m	O
]	x	O
[	x	O
110	m	O
]	x	O
;	x	O

	x	O
12	m	O
 	x	O
void	eng	O
 	x	O
ini	eng	O
(	x	O
)	x	O
/	x	O
/	x	O
初始化	l	O

	x	O
13	m	O
 	x	O
{	x	O

	x	O
14	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
int	eng	O
 	x	O
k	x	O
=	x	O
strlen	eng	O
(	x	O
str	eng	O
)	x	O
;	x	O

	x	O
15	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
(	x	O
int	eng	O
 	x	O
i	x	O
=	x	O
0	x	O
;	x	O
i	x	O
<	x	O
=	x	O
k	x	O
;	x	O
i	eng	O
++	x	O
)	x	O

	x	O
16	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
(	x	O
int	eng	O
 	x	O
j	x	O
=	x	O
0	x	O
;	x	O
j	x	O
<	x	O
=	x	O
k	x	O
;	x	O
j	eng	O
++	x	O
)	x	O

	x	O
17	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
-	x	O
1	x	O
;	x	O

	x	O
18	m	O
 	x	O
}	x	O

	x	O
19	m	O
 	x	O
void	eng	O
 	x	O
cpy	eng	O
(	x	O
char	eng	O
*	x	O
_	x	O
str	eng	O
,	x	O
char	eng	O
*	x	O
str1	eng	O
,	x	O
int	eng	O
&	x	O
begin	eng	O
)	x	O
/	x	O
/	x	O
字符串	n	O
复制	v	O
函数	n	O

	x	O
20	m	O
 	x	O
{	x	O

	x	O
21	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
while	eng	O
(	x	O
*	x	O
_	x	O
str	eng	O
!	x	O
=	x	O
'	x	O
\	x	O
0	x	O
'	x	O
)	x	O

	x	O
22	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
23	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
str1	eng	O
[	x	O
begin	eng	O
++	x	O
]	x	O
=	x	O
*	x	O
_	x	O
str	eng	O
;	x	O

	x	O
24	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
_	x	O
str	eng	O
++	x	O
;	x	O

	x	O
25	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
26	m	O
 	x	O
}	x	O

	x	O
27	m	O
 	x	O
void	eng	O
 	x	O
dps	eng	O
(	x	O
int	eng	O
 	x	O
i	x	O
,	x	O
int	eng	O
 	x	O
j	x	O
)	x	O

	x	O
28	m	O
 	x	O
{	x	O

	x	O
29	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
i	x	O
=	x	O
=	x	O
j	x	O
)	x	O
/	x	O
/	x	O
当	t	O
i	eng	O
=	x	O
j	eng	O
是	v	O
就	d	O
只有	c	O
一个	m	O
单	n	O
括号	n	O
所以	c	O
必须	d	O
加上	v	O
一个	m	O
才	d	O
是	v	O
规则	n	O
的	uj	O

	x	O
30	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
31	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
1	x	O
;	x	O

	x	O
32	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
=	x	O
2	x	O
;	x	O

	x	O
33	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
=	x	O
=	x	O
'	x	O
(	x	O
'	x	O
|	x	O
|	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
=	x	O
=	x	O
'	x	O
)	x	O
'	x	O
)	x	O

	x	O
34	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
0	x	O
]	x	O
=	x	O
'	x	O
(	x	O
'	x	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
1	x	O
]	x	O
=	x	O
'	x	O
)	x	O
'	x	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
2	x	O
]	x	O
=	x	O
'	x	O
\	x	O
0	x	O
'	x	O
;	x	O

	x	O
35	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
=	x	O
=	x	O
'	x	O
[	x	O
'	x	O
|	x	O
|	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
=	x	O
=	x	O
'	x	O
]	x	O
'	x	O
)	x	O

	x	O
36	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
0	x	O
]	x	O
=	x	O
'	x	O
[	x	O
'	x	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
1	x	O
]	x	O
=	x	O
'	x	O
]	x	O
'	x	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
2	x	O
]	x	O
=	x	O
'	x	O
\	x	O
0	x	O
'	x	O
;	x	O

	x	O
37	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
38	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
else	eng	O
 	x	O

	x	O
39	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
40	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
(	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
=	x	O
=	x	O
'	x	O
(	x	O
'	x	O
&&	x	O
str	eng	O
[	x	O
j	x	O
]	x	O
=	x	O
=	x	O
'	x	O
)	x	O
'	x	O
)	x	O
|	x	O
|	x	O
(	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
=	x	O
=	x	O
'	x	O
[	x	O
'	x	O
&&	x	O
str	eng	O
[	x	O
j	x	O
]	x	O
=	x	O
=	x	O
'	x	O
]	x	O
'	x	O
)	x	O
)	x	O
/	x	O
/	x	O
但	c	O
两边	f	O
的	uj	O
括号	n	O
都	d	O
存在	v	O
时	n	O
，	x	O
求	v	O
中间	f	O
的	uj	O
括号	n	O
字符串	n	O
的	uj	O
添	n	O
括号	n	O
数	n	O
最小值	l	O

	x	O
41	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
42	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
=	x	O
0	x	O
;	x	O

	x	O
43	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O

	x	O
44	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
++	x	O
]	x	O
=	x	O
str	eng	O
[	x	O
i	x	O
]	x	O
;	x	O

	x	O
45	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
i	eng	O
+	x	O
1	m	O
<	x	O
=	x	O
j	x	O
-	x	O
1	x	O
)	x	O

	x	O
46	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
47	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
dps	eng	O
(	x	O
i	eng	O
+	x	O
1	m	O
,	x	O
j	x	O
-	x	O
1	x	O
)	x	O
;	x	O

	x	O
48	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
cpy	eng	O
(	x	O
map	eng	O
[	x	O
i	eng	O
+	x	O
1	m	O
]	x	O
[	x	O
j	x	O
-	x	O
1	x	O
]	x	O
.	m	O
str	eng	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
)	x	O
;	x	O

	x	O
49	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
map	eng	O
[	x	O
i	eng	O
+	x	O
1	m	O
]	x	O
[	x	O
j	x	O
-	x	O
1	x	O
]	x	O
.	m	O
num	eng	O
;	x	O

	x	O
50	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
51	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
else	eng	O

	x	O
52	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
0	x	O
;	x	O

	x	O
53	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
++	x	O
]	x	O
=	x	O
str	eng	O
[	x	O
j	x	O
]	x	O
;	x	O

	x	O
54	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
++	x	O
]	x	O
=	x	O
'	x	O
\	x	O
0	x	O
'	x	O
;	x	O

	x	O
55	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O

	x	O
56	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
57	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
i	x	O
<	x	O
j	x	O
)	x	O
/	x	O
/	x	O
当	t	O
前者	n	O
成立	v	O
时	n	O
，	x	O
不要	df	O
忽略	d	O
这	r	O
一步	m	O
判断	v	O
，	x	O
否则	c	O
就是	d	O
这	r	O
组	v	O
数据	n	O
出错	v	O
【	x	O
】	x	O
【	x	O
】	x	O

	x	O
58	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
59	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
(	x	O
int	eng	O
 	x	O
k	x	O
=	x	O
i	x	O
;	x	O
k	x	O
<	x	O
j	x	O
;	x	O
k	eng	O
++	x	O
)	x	O

	x	O
60	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
61	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
k	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
=	x	O
-	x	O
1	x	O
)	x	O

	x	O
62	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
dps	eng	O
(	x	O
i	x	O
,	x	O
k	x	O
)	x	O
;	x	O

	x	O
63	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
map	eng	O
[	x	O
k	eng	O
+	x	O
1	m	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
=	x	O
-	x	O
1	x	O
)	x	O

	x	O
64	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
dps	eng	O
(	x	O
k	eng	O
+	x	O
1	m	O
,	x	O
j	x	O
)	x	O
;	x	O

	x	O
65	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
=	x	O
-	x	O
1	x	O
|	x	O
|	x	O
(	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
>	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
k	x	O
]	x	O
.	m	O
num	eng	O
+	x	O
map	eng	O
[	x	O
k	eng	O
+	x	O
1	m	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
)	x	O
)	x	O

	x	O
66	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
67	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
=	x	O
0	x	O
;	x	O

	x	O
68	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
=	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
k	x	O
]	x	O
.	m	O
num	eng	O
+	x	O
map	eng	O
[	x	O
k	eng	O
+	x	O
1	m	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
num	eng	O
;	x	O

	x	O
69	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
cpy	eng	O
(	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
k	x	O
]	x	O
.	m	O
str	eng	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
)	x	O
;	x	O

	x	O
70	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
cpy	eng	O
(	x	O
map	eng	O
[	x	O
k	eng	O
+	x	O
1	m	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
,	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
)	x	O
;	x	O

	x	O
71	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
str	eng	O
[	x	O
map	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
.	m	O
len	eng	O
++	x	O
]	x	O
=	x	O
'	x	O
\	x	O
0	x	O
'	x	O
;	x	O

	x	O
72	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
73	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
74	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
75	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
76	m	O
 	x	O
}	x	O

	x	O
77	m	O
 	x	O
int	eng	O
 	x	O
main	eng	O
(	x	O
)	x	O

	x	O
78	m	O
 	x	O
{	x	O

	x	O
79	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
gets	eng	O
(	x	O
str	eng	O
)	x	O
;	x	O

	x	O
80	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
(	x	O
strlen	eng	O
(	x	O
str	eng	O
)	x	O
)	x	O
 	x	O
/	x	O
/	x	O
判断	v	O
有没有	v	O
字符串	n	O

	x	O
81	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
82	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
ini	eng	O
(	x	O
)	x	O
;	x	O

	x	O
83	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
dps	eng	O
(	x	O
0	x	O
,	x	O
strlen	eng	O
(	x	O
str	eng	O
)	x	O
-	x	O
1	x	O
)	x	O
;	x	O

	x	O
84	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
printf	eng	O
(	x	O
"	x	O
%	x	O
s	x	O
\	x	O
n	x	O
"	x	O
,	x	O
map	eng	O
[	x	O
0	x	O
]	x	O
[	x	O
strlen	eng	O
(	x	O
str	eng	O
)	x	O
-	x	O
1	x	O
]	x	O
.	m	O
str	eng	O
)	x	O
;	x	O

	x	O
85	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
86	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
else	eng	O

	x	O
87	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
printf	eng	O
(	x	O
"	x	O
\	x	O
n	x	O
"	x	O
)	x	O
;	x	O

	x	O
88	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
return	eng	O
 	x	O
0	x	O
;	x	O

	x	O
89	m	O
 	x	O
}	x	O
 	x	O

	x	O
 	x	O

	x	O

	x	O
　	x	O
　	x	O
接下来	l	O
给出	v	O
另	r	O
一种	m	O
代码	n	O
（	x	O
递推	v	O
形式	n	O
，	x	O
递归	v	O
输出	v	O
）	x	O

	x	O
 	x	O

	x	O
 	x	O

	x	O
 	x	O
 	x	O
1	x	O
 	x	O
#	x	O
include	eng	O
<	x	O
iostream	eng	O
>	x	O

	x	O
 	x	O
2	x	O
 	x	O
#	x	O
include	eng	O
<	x	O
string	eng	O
>	x	O

	x	O
 	x	O
3	x	O
 	x	O
#	x	O
include	eng	O
<	x	O
fstream	eng	O
>	x	O

	x	O
 	x	O
4	x	O
 	x	O
using	eng	O
 	x	O
namespace	eng	O
 	x	O
std	eng	O
;	x	O

	x	O
 	x	O
5	x	O
 	x	O
string	eng	O
 	x	O
s	x	O
;	x	O

	x	O
 	x	O
6	x	O
 	x	O
int	eng	O
 	x	O
d	x	O
[	x	O
101	m	O
]	x	O
[	x	O
101	m	O
]	x	O
,	x	O
 	x	O
value	eng	O
[	x	O
101	m	O
]	x	O
[	x	O
101	m	O
]	x	O
,	x	O
 	x	O
length	eng	O
;	x	O

	x	O
 	x	O
7	x	O
 	x	O
void	eng	O
 	x	O
fun	eng	O
(	x	O
)	x	O

	x	O
 	x	O
8	x	O
 	x	O
{	x	O

	x	O
 	x	O
9	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
 	x	O
(	x	O
int	eng	O
 	x	O
p	x	O
 	x	O
=	x	O
 	x	O
0	x	O
;	x	O
 	x	O
p	x	O
 	x	O
<	x	O
 	x	O
length	eng	O
;	x	O
 	x	O
p	eng	O
++	x	O
)	x	O
d	x	O
[	x	O
p	x	O
]	x	O
[	x	O
p	x	O
]	x	O
 	x	O
=	x	O
 	x	O
1	x	O
;	x	O

	x	O
10	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
 	x	O
(	x	O
int	eng	O
 	x	O
tem	eng	O
 	x	O
=	x	O
 	x	O
1	x	O
;	x	O
 	x	O
tem	eng	O
 	x	O
<	x	O
 	x	O
length	eng	O
;	x	O
 	x	O
tem	eng	O
++	x	O
)	x	O

	x	O
11	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
 	x	O
(	x	O
int	eng	O
 	x	O
i	x	O
 	x	O
=	x	O
 	x	O
0	x	O
;	x	O
 	x	O
i	x	O
 	x	O
<	x	O
 	x	O
length	eng	O
 	x	O
-	x	O
 	x	O
tem	eng	O
;	x	O
 	x	O
i	eng	O
++	x	O
)	x	O

	x	O
12	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
13	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
int	eng	O
 	x	O
j	x	O
 	x	O
=	x	O
 	x	O
tem	eng	O
 	x	O
+	x	O
 	x	O
i	x	O
;	x	O

	x	O
14	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
d	x	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
 	x	O
99999	m	O
;	x	O

	x	O
15	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
 	x	O
(	x	O
(	x	O
s	x	O
[	x	O
i	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
(	x	O
'	x	O
 	x	O
&&	x	O
 	x	O
s	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
)	x	O
'	x	O
)	x	O
 	x	O
|	x	O
|	x	O
 	x	O
(	x	O
s	x	O
[	x	O
i	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
[	x	O
'	x	O
 	x	O
&&	x	O
 	x	O
s	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
]	x	O
'	x	O
)	x	O
)	x	O
/	x	O
/	x	O
1	x	O
@	x	O

	x	O
16	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
17	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
d	x	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
 	x	O
d	x	O
[	x	O
i	x	O
 	x	O
+	x	O
 	x	O
1	x	O
]	x	O
[	x	O
j	x	O
 	x	O
-	x	O
 	x	O
1	x	O
]	x	O
;	x	O

	x	O
18	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
value	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
 	x	O
-	x	O
1	x	O
;	x	O

	x	O
19	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
20	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
for	eng	O
 	x	O
(	x	O
int	eng	O
 	x	O
k	x	O
 	x	O
=	x	O
 	x	O
i	x	O
;	x	O
 	x	O
k	x	O
 	x	O
<	x	O
 	x	O
j	x	O
;	x	O
 	x	O
k	eng	O
++	x	O
)	x	O
/	x	O
/	x	O
此处	r	O
需要	v	O
注意	v	O
，	x	O
即便	c	O
1	x	O
@	x	O
处	n	O
成立	v	O
，	x	O
也	d	O
不能	v	O
省略	n	O

	x	O
21	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
 	x	O
(	x	O
d	x	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
>	x	O
 	x	O
d	x	O
[	x	O
i	x	O
]	x	O
[	x	O
k	x	O
]	x	O
 	x	O
+	x	O
 	x	O
d	x	O
[	x	O
k	x	O
 	x	O
+	x	O
 	x	O
1	x	O
]	x	O
[	x	O
j	x	O
]	x	O
)	x	O

	x	O
22	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
23	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
d	x	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
 	x	O
d	x	O
[	x	O
i	x	O
]	x	O
[	x	O
k	x	O
]	x	O
 	x	O
+	x	O
 	x	O
d	x	O
[	x	O
k	x	O
 	x	O
+	x	O
 	x	O
1	x	O
]	x	O
[	x	O
j	x	O
]	x	O
;	x	O

	x	O
24	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
value	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
 	x	O
k	x	O
;	x	O

	x	O
25	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
26	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
27	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
return	eng	O
;	x	O

	x	O
28	m	O
 	x	O
}	x	O

	x	O
29	m	O
 	x	O
void	eng	O
 	x	O
print	eng	O
(	x	O
int	eng	O
 	x	O
i	x	O
,	x	O
 	x	O
int	eng	O
 	x	O
j	x	O
)	x	O

	x	O
30	m	O
 	x	O
{	x	O

	x	O
31	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
 	x	O
(	x	O
i	x	O
 	x	O
>	x	O
 	x	O
j	x	O
)	x	O
return	eng	O
;	x	O

	x	O
32	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
else	eng	O
 	x	O
if	eng	O
 	x	O
(	x	O
i	x	O
 	x	O
=	x	O
=	x	O
 	x	O
j	x	O
)	x	O

	x	O
33	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
34	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
 	x	O
(	x	O
s	x	O
[	x	O
i	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
(	x	O
'	x	O
 	x	O
|	x	O
|	x	O
 	x	O
s	x	O
[	x	O
i	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
)	x	O
'	x	O
)	x	O
 	x	O
 	x	O
 	x	O
 	x	O
printf	eng	O
(	x	O
"	x	O
(	x	O
)	x	O
"	x	O
)	x	O
;	x	O

	x	O
35	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
if	eng	O
 	x	O
(	x	O
s	x	O
[	x	O
i	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
[	x	O
'	x	O
 	x	O
|	x	O
|	x	O
 	x	O
s	x	O
[	x	O
i	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
'	x	O
]	x	O
'	x	O
)	x	O
printf	eng	O
(	x	O
"	x	O
[	x	O
]	x	O
"	x	O
)	x	O
;	x	O

	x	O
36	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O
else	eng	O
 	x	O
if	eng	O
 	x	O
(	x	O
value	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
=	x	O
=	x	O
 	x	O
-	x	O
1	x	O
)	x	O

	x	O
37	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
38	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
printf	eng	O
(	x	O
"	x	O
%	x	O
c	x	O
"	x	O
,	x	O
 	x	O
s	x	O
[	x	O
i	x	O
]	x	O
)	x	O
;	x	O

	x	O
39	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
print	eng	O
(	x	O
i	x	O
 	x	O
+	x	O
 	x	O
1	x	O
,	x	O
 	x	O
j	x	O
 	x	O
-	x	O
 	x	O
1	x	O
)	x	O
;	x	O

	x	O
40	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
printf	eng	O
(	x	O
"	x	O
%	x	O
c	x	O
"	x	O
,	x	O
 	x	O
s	x	O
[	x	O
j	x	O
]	x	O
)	x	O
;	x	O

	x	O
41	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O
else	eng	O
 	x	O
{	x	O

	x	O
42	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
print	eng	O
(	x	O
i	x	O
,	x	O
 	x	O
value	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
)	x	O
;	x	O

	x	O
43	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
print	eng	O
(	x	O
value	eng	O
[	x	O
i	x	O
]	x	O
[	x	O
j	x	O
]	x	O
 	x	O
+	x	O
 	x	O
1	x	O
,	x	O
 	x	O
j	x	O
)	x	O
;	x	O

	x	O
44	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
45	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
return	eng	O
;	x	O

	x	O
46	m	O
 	x	O
}	x	O

	x	O
47	m	O
 	x	O
int	eng	O
 	x	O
main	eng	O
(	x	O
)	x	O

	x	O
48	m	O
 	x	O
{	x	O

	x	O
49	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
while	eng	O
 	x	O
(	x	O
getline	eng	O
(	x	O
cin	eng	O
,	x	O
 	x	O
s	x	O
)	x	O
)	x	O

	x	O
50	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
{	x	O

	x	O
51	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
memset	eng	O
(	x	O
d	x	O
,	x	O
 	x	O
0	x	O
,	x	O
 	x	O
sizeof	eng	O
(	x	O
d	x	O
)	x	O
)	x	O
;	x	O

	x	O
52	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
length	eng	O
 	x	O
=	x	O
 	x	O
(	x	O
int	eng	O
)	x	O
s	eng	O
.	m	O
length	eng	O
(	x	O
)	x	O
;	x	O

	x	O
53	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
fun	eng	O
(	x	O
)	x	O
;	x	O

	x	O
54	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
print	eng	O
(	x	O
0	x	O
,	x	O
 	x	O
length	eng	O
 	x	O
-	x	O
 	x	O
1	x	O
)	x	O
;	x	O

	x	O
55	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
printf	eng	O
(	x	O
"	x	O
\	x	O
n	x	O
"	x	O
)	x	O
;	x	O

	x	O
56	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
}	x	O

	x	O
57	m	O
 	x	O
 	x	O
 	x	O
 	x	O
 	x	O
return	eng	O
 	x	O
0	x	O
;	x	O

	x	O
58	m	O
 	x	O
}	x	O
 	x	O

	x	O
 	x	O

	x	O

	x	O
　	x	O
　	x	O

	x	O