【转】pku 1191 棋盘分割 （动态规划）_沧海桑田 . 蓝色空间_百度空间

Time Limit:1000MS Memory Limit:10000K Total Submissions:3151 Accepted:1146 
Description
将一个８*８的棋盘进行如下分割：将原棋盘割下一块矩形棋盘并使剩下部分也是矩形，再将剩下的部分继续如此分割，这样割了(n-1)次后，连同最后剩下的矩形棋盘共有n块矩形棋盘。(每次切割都只能沿着棋盘格子的边进行)
原棋盘上每一格有一个分值，一块矩形棋盘的总分为其所含各格分值之和。现在需要把棋盘按上述规则分割成n块矩形棋盘，并使各矩形棋盘总分的均方差最小。
均方差，其中平均值，xi为第i块矩形棋盘的总分。
请编程对给出的棋盘及n，求出O'的最小值。
Input
第1行为一个整数n(1 < n < 15)。
第2行至第9行每行为8个小于100的非负整数，表示棋盘上相应格子的分值。每行相邻两数之间用一个空格分隔。
Output
仅一个数，为O'（四舍五入精确到小数点后三位）。
Sample Input
3 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 3
Sample Output
1.633
Source
----------------------------------------------------------------------------------------------动态规划练习题刚刚开始的时候，考虑到每个状态需要记录的信息需要开一个5维的数组（左上角左边i1,j1;右下角坐标i2,j2;当前切割到第几次），有点被吓懵了，所以这道题晾了很久，刚刚才做出来。还有个原因就是腾讯赛上，有道PAPERCUT，本质上跟棋盘分割是相同的，可提交了n次，都是WA，为了验证我的思路是正确的，所以拿这道题来检测一下，事实证明之前是出了点逻辑上的错误。除了上面的5维数组外，还需开个4维数组来保存分割后的每个子棋盘的总分的平方。均方差公式比较复杂，联立题目给的两个式子，化简之后，就可以得到题目要求的就是每块子棋盘的总分最小。对于一个棋盘，可以横着切割，也可以竖直切割。切割完，会得到两块子棋盘，如果此时还切不够n次的话，就继续递归，对两块子棋盘进行切割，找出最小的切割方式。子棋盘的最小分割导致整个棋盘的最小分割，符合最优子结构。----------------------------------------------------------------------------------------------源码如下：#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
double f[10][10][10][10][20];
double s[10][10][10][10];
double a[10][10];
double cal(int i1,int j1,int i2,int j2)
{
if(s[i1][j1][i2][j2]>=0)
return s[i1][j1][i2][j2];
int i,j;
double sum=0;
for(i=i1;i<=i2;i++)
{
for(j=j1;j<=j2;j++)
{
sum+=a[i][j]; }
}
s[i1][j1][i2][j2]=sum*sum;
return s[i1][j1][i2][j2];
}
double ge(int i1,int j1,int i2,int j2,int k)
{
if(k==1)//
return cal(i1,j1,i2,j2);
if(f[i1][j1][i2][j2][k]>=0)
return f[i1][j1][i2][j2][k];
int i,j;
double ff=0;
double mini=999999999999999;
for(i=i1;i<i2;i++)
{
ff=__min((ge(i1,j1,i,j2,k-1)+cal(i+1,j1,i2,j2)),(ge(i+1,j1,i2,j2,k-1)+cal(i1,j1,i,j2)));
if(ff<mini)
mini=ff;
}
for(j=j1;j<j2;j++)
{
ff=__min((ge(i1,j1,i2,j,k-1)+cal(i1,j+1,i2,j2)),(ge(i1,j+1,i2,j2,k-1)+cal(i1,j1,i2,j)));
if(ff<mini)
mini=ff;
}
f[i1][j1][i2][j2][k]=mini;
return f[i1][j1][i2][j2][k];}
int main()
{
//freopen("1.txt","r",stdin);
double n;
int i,j;
double x;
double min=0;
double sum=0;
scanf("%lf",&n);
memset(a,0,sizeof(a));
memset(f,-1,sizeof(f));
memset(s,-1,sizeof(s));
for(i=1;i<=8;i++)
{
for(j=1;j<=8;j++)
{
scanf("%lf",&a[i][j]);
sum+=a[i][j];
}
}
x=sum/n;
min=ge(1,1,8,8,n);
printf("%.3lf\n",sqrt(min/n-(x*x)));
return 0;
}
