poj3401	eng	N	Y	O	B-OJ

-	x	N	N	O	O

lyg	eng	N	N	O	O
_	x	N	N	O	O
wangyushi	eng	N	N	O	O
的	uj	N	N	O	O
专栏	n	N	N	O	O

-	x	N	N	O	O

博客	nr	N	N	O	O
频道	n	N	N	O	O

-	x	N	N	O	O

CSDN	eng	N	N	O	O
.	m	N	N	O	O
NET	eng	N	N	O	O

http	eng	N	N	O	O
:	x	N	N	O	O
/	x	N	N	O	O
/	x	N	N	O	O
acm	eng	N	N	O	O
.	m	N	N	O	O
pku	eng	N	Y	O	O
.	m	N	N	O	O
edu	eng	N	N	O	O
.	m	N	N	O	O
cn	eng	N	N	O	O
/	x	N	N	O	O
JudgeOnline	eng	N	N	O	O
/	x	N	N	O	O
problem	eng	N	N	O	O
?	x	N	N	O	O
id	eng	N	N	O	O
=	x	N	N	O	O
3401	m	N	N	O	O

String	eng	N	N	O	O

reduction	eng	N	N	O	O

Time	eng	N	N	O	O

Limit	eng	N	N	O	O
:	x	N	N	O	O

1000	m	N	N	O	O
MS	eng	N	N	O	O

Memory	eng	N	N	O	O

Limit	eng	N	N	O	O
:	x	N	N	O	O

65536	m	N	N	O	O
K	eng	N	N	O	O

Total	eng	N	N	O	O

Submissions	eng	N	N	O	O
:	x	N	N	O	O

799	m	N	N	O	O

Accepted	eng	N	N	O	O
:	x	N	N	O	O

219	m	N	N	O	O

Description	eng	N	N	O	O

There	eng	N	N	O	O

is	eng	N	N	O	O

a	x	N	N	O	O

string	eng	N	N	O	O

of	eng	N	N	O	O

characters	eng	N	N	O	O

'	x	N	N	O	O
a	x	N	N	O	O
'	x	N	N	O	O

and	eng	N	N	O	O

'	x	N	N	O	O
b	x	N	N	O	O
'	x	N	N	O	O

with	eng	N	N	O	O

the	eng	N	N	O	O

length	eng	N	N	O	O

of	eng	N	N	O	O

no	eng	N	N	O	O

more	eng	N	N	O	O

than	eng	N	N	O	O

255	m	N	N	O	O

characters	eng	N	N	O	O
.	m	N	N	O	O

You	eng	N	N	O	O

can	eng	N	N	O	O

perform	eng	N	N	O	O

the	eng	N	N	O	O

substring	eng	N	N	O	O

reduction	eng	N	N	O	O

on	eng	N	N	O	O

the	eng	N	N	O	O

initial	eng	N	N	O	O

string	eng	N	N	O	O

in	eng	Y	N	O	O

the	eng	N	N	O	O

following	eng	N	N	O	O

way	eng	N	N	O	O
:	x	N	N	O	O

a	x	N	N	O	O

substring	eng	N	N	O	O

"	x	N	N	O	O
a	x	N	N	O	O
*	x	N	N	O	O
a	x	N	N	O	O
"	x	N	N	O	O

or	eng	Y	N	O	O

"	x	N	N	O	O
b	x	N	N	O	O
*	x	N	N	O	O
b	x	N	N	O	O
"	x	N	N	O	O

(	x	N	N	O	O
where	eng	N	N	O	O

*	x	N	N	O	O
(	x	N	N	O	O
asterisk	eng	N	N	O	O
)	x	N	N	O	O

denotes	eng	N	N	O	O

any	eng	N	N	O	O

character	eng	N	N	O	O
)	x	N	N	O	O

can	eng	N	N	O	O

be	eng	Y	N	O	O

reduces	eng	N	N	O	O

to	eng	N	N	O	O

a	x	N	N	O	O

substring	eng	N	N	O	O

"	x	N	N	O	O
*	x	N	N	O	O
"	x	N	N	O	O
.	x	N	N	O	O

The	eng	N	N	O	O

task	eng	N	N	O	O

is	eng	N	N	O	O

to	eng	N	N	O	O

achieve	eng	N	N	O	O

a	x	N	N	O	O

string	eng	N	N	O	O

of	eng	N	N	O	O

minimal	eng	N	N	O	O

possible	eng	N	N	O	O

length	eng	N	N	O	O

after	eng	N	N	O	O

several	eng	N	N	O	O

substring	eng	N	N	O	O

reductions	eng	N	N	O	O
.	m	N	N	O	O

Input	eng	N	N	O	O

The	eng	N	N	O	O

input	eng	N	N	O	O

contains	eng	N	N	O	O

the	eng	N	N	O	O

initial	eng	N	N	O	O

string	eng	N	N	O	O
.	m	N	N	O	O

Output	eng	N	N	O	O

The	eng	N	N	O	O

output	eng	N	N	O	O

contains	eng	N	N	O	O

a	x	N	N	O	O

single	eng	N	N	O	O

line	eng	N	N	O	O

with	eng	N	N	O	O

the	eng	N	N	O	O

minimal	eng	N	N	O	O

possible	eng	N	N	O	O

length	eng	N	N	O	O
.	m	N	N	O	O

Sample	eng	N	N	O	O

Input	eng	N	N	O	O

aab	eng	N	N	O	O

Sample	eng	N	N	O	O

Output	eng	N	N	O	O

3	x	N	N	O	O

Source	eng	N	N	O	O

Northeastern	eng	N	N	O	O

Europe	eng	N	N	O	O

2001	m	N	N	O	O
,	x	N	N	O	O

Western	eng	N	N	O	O

Subregion	eng	N	N	O	O

题目	n	Y	N	O	O
意思	n	N	N	O	O
是	v	N	N	O	O
说	v	N	N	O	O
，	x	N	N	O	O
有	v	N	N	O	O
一个	m	N	N	O	O
只有	c	N	N	O	O
'	x	N	N	O	O
a	x	N	N	O	O
'	x	N	N	O	O
,	x	N	N	O	O
'	x	N	N	O	O
b	x	N	N	O	O
'	x	N	N	O	O
组成	v	N	N	O	O
的	uj	N	N	O	O
字符串	n	Y	N	O	O
，	x	N	N	O	O
可以	c	N	N	O	O
有	v	N	N	O	O
一种	m	N	N	O	O
操作	v	Y	N	O	O
reduction	eng	N	N	O	O

,	x	N	N	O	O
可以	c	N	N	O	O
将	d	N	N	O	O
形如	v	N	N	O	O

a	x	N	N	O	O
*	x	N	N	O	O
a	x	N	N	O	O
,	x	N	N	O	O
b	x	N	N	O	O
*	x	N	N	O	O
b	eng	N	N	O	O
的	uj	N	N	O	O
字符	n	Y	N	O	O
变为	v	N	N	O	O
a	x	N	N	O	O
或者	c	N	N	O	O
b	x	N	N	O	O
，	x	N	N	O	O
要求	v	N	N	O	O

给定	v	N	N	O	O
一个	m	N	N	O	O
字符串	n	Y	N	O	O
，	x	N	N	O	O
求能	v	N	N	O	O
变化	vn	N	N	O	O
后	f	N	N	O	O
的	uj	N	N	O	O
最小	a	Y	N	O	O
的	uj	N	N	O	O
长度	ns	Y	N	O	O
。	x	N	N	O	O

看	v	N	N	O	O
了	ul	N	N	O	O
discuss	eng	N	N	O	O
后才	t	N	N	O	O
AC	eng	N	N	O	O
,	x	N	N	O	O
具体	a	N	N	O	O
是	v	N	N	O	O
这样	r	N	N	O	O
做	v	N	N	O	O
的	uj	N	N	O	O
：	x	N	N	O	O

我们	r	N	N	O	O
先用	n	N	N	O	O
F	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O
表示	v	Y	N	O	O
能否	v	N	N	O	O
将	d	N	N	O	O
i	eng	N	N	O	O
,	x	N	N	O	O
j	x	N	N	O	O
之间	f	N	N	O	O
的	uj	N	N	O	O
字符串	n	Y	N	O	O
变化	vn	N	N	O	O
为	p	N	N	O	O
一个	m	N	N	O	O
单个	b	N	N	O	O
字符	n	Y	N	O	O
，	x	N	N	O	O
这个	r	N	N	O	O
是	v	N	N	O	O
标准	n	N	N	O	O
的	uj	N	N	O	O
动态	n	Y	N	O	B-KNOWLEDGE
规划	n	Y	N	O	I-KNOWLEDGE
，	x	N	N	O	O
状态	n	Y	N	O	O
转移	v	N	N	O	O
方程	n	Y	N	O	O
为	p	N	N	O	O
：	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

true	eng	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O

str	eng	Y	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O

str	eng	Y	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

&&	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

=	x	N	N	O	O

true	eng	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

true	eng	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
2	m	N	N	O	O

!	x	N	N	O	O
=	x	N	N	O	O

j	x	N	N	O	O

&&	x	N	N	O	O

(	x	N	N	O	O
F	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
2	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O

true	eng	N	N	O	O

|	x	N	N	O	O
|	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
-	x	N	N	O	O
2	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O
true	eng	N	N	O	O
)	x	N	N	O	O

else	eng	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

false	eng	N	N	O	O
;	x	N	N	O	O

然后	c	N	N	O	O
我们	r	N	N	O	O
用	p	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

表示	v	Y	N	O	O
i	x	N	N	O	O
，	x	N	N	O	O
j	x	N	N	O	O
之间	f	N	N	O	O
的	uj	N	N	O	O
字串	n	N	N	O	O
能够	v	N	N	O	O
变为	v	N	N	O	O
的	uj	N	N	O	O
最小	a	Y	N	O	O
长度	ns	Y	N	O	O
，	x	N	N	O	O
可以	c	N	N	O	O
看出	v	N	N	O	O
这个	r	N	N	O	O
也	d	N	N	O	O
是	v	N	N	O	O
一个	m	N	N	O	O
标准	n	N	N	O	O
的	uj	N	N	O	O
动态	n	Y	N	O	B-KNOWLEDGE
规划	n	Y	N	O	I-KNOWLEDGE

状态	n	Y	N	O	O
转移	v	N	N	O	O
方程	n	Y	N	O	O
为	p	N	N	O	O
：	x	N	N	O	O

Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

1	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O

true	eng	N	N	O	O
)	x	N	N	O	O

else	eng	N	N	O	O

Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

min	eng	N	N	O	O
(	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O

+	x	N	N	O	O

2	x	N	N	O	O
,	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
]	x	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
,	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
j	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
)	x	N	N	O	O

由此	c	N	N	O	O
我们	r	N	N	O	O
就	d	N	N	O	O
可以	c	N	N	O	O
得到	v	N	N	O	O
求	v	N	N	O	O
这个	r	N	N	O	O
题目	n	Y	N	O	O
的	uj	N	N	O	O
具体做法	v	N	N	O	O
，	x	N	N	O	O
代码	n	N	N	O	O
如下	t	N	N	O	O
：	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

"	x	N	N	O	O
iostream	eng	N	N	O	O
"	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

"	x	N	N	O	O
cstdio	eng	N	N	O	O
"	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

"	x	N	N	O	O
cstring	eng	N	N	O	O
"	x	N	N	O	O

using	eng	N	N	O	O

namespace	eng	N	N	O	O

std	eng	N	N	O	O
;	x	N	N	O	O

const	eng	N	N	O	O

int	eng	N	N	O	O

MaxN	eng	N	N	O	O

=	x	N	N	O	O

260	m	N	N	O	O
;	x	N	N	O	O

bool	eng	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
MaxN	eng	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
MaxN	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

char	eng	N	N	O	O

str	eng	Y	N	O	O
[	x	N	N	O	O
MaxN	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

Len	eng	N	N	O	O
[	x	N	N	O	O
MaxN	eng	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
MaxN	eng	N	N	O	O
]	x	N	N	O	O
,	x	N	N	O	O
len	eng	N	N	O	O
;	x	N	N	O	O

inline	eng	N	N	O	O

int	eng	N	N	O	O

min	eng	N	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

a	x	N	N	O	O
,	x	N	N	O	O
int	eng	N	N	O	O

b	x	N	N	O	O
,	x	N	N	O	O
int	eng	N	N	O	O

c	x	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

int	eng	N	N	O	O

ret	eng	N	N	O	O

=	x	N	N	O	O

a	x	N	N	O	O
;	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
b	x	N	N	O	O

<	x	N	N	O	O

ret	eng	N	N	O	O
)	x	N	N	O	O

ret	eng	N	N	O	O

=	x	N	N	O	O

b	x	N	N	O	O
;	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
c	x	N	N	O	O

<	x	N	N	O	O

ret	eng	N	N	O	O
)	x	N	N	O	O

ret	eng	N	N	O	O

=	x	N	N	O	O

c	x	N	N	O	O
;	x	N	N	O	O

return	eng	N	N	O	O

ret	eng	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

void	eng	N	N	O	O

work	eng	N	N	O	O
(	x	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

len	eng	N	N	O	O

=	x	N	N	O	O

strlen	eng	N	N	O	O
(	x	N	N	O	O
str	eng	Y	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

memset	eng	N	N	O	O
(	x	N	N	O	O
F	x	N	N	O	O
,	x	N	N	O	O
false	eng	N	N	O	O
,	x	N	N	O	O
sizeof	eng	N	N	O	O
(	x	N	N	O	O
F	x	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

i	x	N	N	O	O

=	x	N	N	O	O

0	x	N	N	O	O

;	x	N	N	O	O
i	x	N	N	O	O

<	x	N	N	O	O

len	eng	N	N	O	O
;	x	N	N	O	O

++	x	N	N	O	O
i	eng	N	N	O	O
)	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

true	eng	N	N	O	O
;	x	N	N	O	O

memset	eng	N	N	O	O
(	x	N	N	O	O
Len	eng	N	N	O	O
,	x	N	N	O	O
0	x	N	N	O	O
,	x	N	N	O	O
sizeof	eng	N	N	O	O
(	x	N	N	O	O
Len	eng	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

i	x	N	N	O	O

=	x	N	N	O	O

0	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O

<	x	N	N	O	O

len	eng	N	N	O	O
;	x	N	N	O	O

++	x	N	N	O	O
i	eng	N	N	O	O
)	x	N	N	O	O

Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

1	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

j	x	N	N	O	O

=	x	N	N	O	O

2	x	N	N	O	O
;	x	N	N	O	O
j	x	N	N	O	O

<	x	N	N	O	O

len	eng	N	N	O	O

;	x	N	N	O	O
++	x	N	N	O	O
j	eng	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

i	x	N	N	O	O

=	x	N	N	O	O

0	x	N	N	O	O

;	x	N	N	O	O
i	x	N	N	O	O

<	x	N	N	O	O

len	eng	N	N	O	O

-	x	N	N	O	O

j	x	N	N	O	O
;	x	N	N	O	O

++	x	N	N	O	O
i	eng	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
str	eng	Y	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O

str	eng	Y	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

&&	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

true	eng	N	N	O	O
;	x	N	N	O	O

else	eng	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O

j	x	N	N	O	O
!	x	N	N	O	O
=	x	N	N	O	O

2	x	N	N	O	O

&&	x	N	N	O	O

(	x	N	N	O	O
F	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
2	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

|	x	N	N	O	O
|	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
-	x	N	N	O	O
2	x	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O

F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

true	eng	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

}	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

j	x	N	N	O	O

=	x	N	N	O	O

1	x	N	N	O	O
;	x	N	N	O	O
j	x	N	N	O	O

<	x	N	N	O	O

len	eng	N	N	O	O
;	x	N	N	O	O

++	x	N	N	O	O
j	eng	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

i	x	N	N	O	O

=	x	N	N	O	O

0	x	N	N	O	O

;	x	N	N	O	O
i	x	N	N	O	O

<	x	N	N	O	O

len	eng	N	N	O	O

-	x	N	N	O	O

j	x	N	N	O	O
;	x	N	N	O	O

++	x	N	N	O	O
i	eng	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
F	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O

true	eng	N	N	O	O
)	x	N	N	O	O

Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

1	x	N	N	O	O
;	x	N	N	O	O

else	eng	N	N	O	O

Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O

min	eng	N	N	O	O
(	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O

+	x	N	N	O	O

2	x	N	N	O	O
,	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
]	x	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
,	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
j	eng	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O
+	x	N	N	O	O
1	m	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

}	x	N	N	O	O

}	x	N	N	O	O

int	eng	N	N	O	O

main	eng	N	N	O	O
(	x	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
s	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
&	x	N	N	O	O
str	eng	Y	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

work	eng	N	N	O	O
(	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

printf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
/	x	N	N	O	O
n	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
Len	eng	N	N	O	O
[	x	N	N	O	O
0	x	N	N	O	O
]	x	N	N	O	O
[	x	N	N	O	O
len	eng	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

return	eng	N	N	O	O

0	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

后来	t	N	N	O	O
突然	ad	N	N	O	O
发现	v	N	N	O	O
这个	r	N	N	O	O
题目	n	Y	N	O	O
有	v	N	N	O	O
一个	m	N	N	O	O
非常	d	N	N	O	O
桥面	n	N	N	O	O
简单	a	N	N	O	O
的	uj	N	N	O	O
方法	n	Y	N	O	O
，	x	N	N	O	O
由于	c	N	N	O	O
a	x	N	N	O	O
*	x	N	N	O	O
a	x	N	N	O	O
,	x	N	N	O	O

b	x	N	N	O	O
*	x	N	N	O	O
b	x	N	N	O	O
之类	r	N	N	O	O
的	uj	N	N	O	O
字符	n	Y	N	O	O
可以	c	N	N	O	O
匹配	v	Y	N	O	O
任意	v	Y	N	O	O
字符	n	Y	N	O	O
，	x	N	N	O	O
那么	r	N	N	O	O
我们	r	N	N	O	O
只要	c	N	N	O	O
从前	t	N	N	O	O

向	p	N	N	O	O
后	f	N	N	O	O
扫描	v	Y	N	O	O
，	x	N	N	O	O
如果	c	N	N	O	O
有	v	N	N	O	O
相隔	v	N	N	O	O
的	uj	N	N	O	O
两个	m	N	N	O	O
字符	n	Y	N	O	O
相同	d	N	N	O	O
，	x	N	N	O	O
由于	c	N	N	O	O
这	r	N	N	O	O
三个	m	N	N	O	O
字符	n	Y	N	O	O
能够	v	N	N	O	O
匹配	v	Y	N	O	O
a	x	N	N	O	O
,	x	N	N	O	O
b	x	N	N	O	O
任意	v	Y	N	O	O
字符	n	Y	N	O	O
，	x	N	N	O	O
那么	r	N	N	O	O
我们	r	N	N	O	O
就	d	N	N	O	O
可以	c	N	N	O	O
让	v	N	N	O	O
这种	r	N	N	O	O
匹配	v	Y	N	O	O
一直	d	N	N	O	O
进行	v	N	N	O	O

下去	t	N	N	O	O
，	x	N	N	O	O
从而	c	N	N	O	O
将	d	N	N	O	O
字符串	n	Y	N	O	O
不断	d	N	N	O	O
的	uj	N	N	O	O
reduction	eng	N	N	O	O

，	x	N	N	O	O
只要	c	N	N	O	O
注意	v	N	N	O	O
字符串	n	Y	N	O	O
长度	ns	Y	N	O	O
的	uj	N	N	O	O
奇偶性	n	N	N	O	O
就	d	N	N	O	O
可以	c	N	N	O	O
了	ul	N	N	O	O
，	x	N	N	O	O
如此	c	N	N	O	O
我们	r	N	N	O	O
可以	c	N	N	O	O
得到	v	N	N	O	O
一个	m	N	N	O	O
很	zg	N	N	O	O
简单	a	N	N	O	O
的	uj	N	N	O	O
方法	n	Y	N	O	O

代码	n	N	N	O	O
如下	t	N	N	O	O
：	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

"	x	N	N	O	O
iostream	eng	N	N	O	O
"	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

"	x	N	N	O	O
cstdio	eng	N	N	O	O
"	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

"	x	N	N	O	O
cstring	eng	N	N	O	O
"	x	N	N	O	O

using	eng	N	N	O	O

namespace	eng	N	N	O	O

std	eng	N	N	O	O
;	x	N	N	O	O

char	eng	N	N	O	O

str	eng	Y	N	O	O
[	x	N	N	O	O
256	m	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

main	eng	N	N	O	O
(	x	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
s	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
str	eng	Y	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

len	eng	N	N	O	O

=	x	N	N	O	O

strlen	eng	N	N	O	O
(	x	N	N	O	O
str	eng	Y	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

ans	eng	N	N	O	O

=	x	N	N	O	O

len	eng	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

i	x	N	N	O	O

=	x	N	N	O	O

0	x	N	N	O	O

;	x	N	N	O	O
i	x	N	N	O	O

+	x	N	N	O	O
2	m	N	N	O	O

<	x	N	N	O	O
len	eng	N	N	O	O
;	x	N	N	O	O
++	x	N	N	O	O
i	eng	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
str	eng	Y	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O

=	x	N	N	O	O
=	x	N	N	O	O

str	eng	Y	N	O	O
[	x	N	N	O	O
i	eng	N	N	O	O
+	x	N	N	O	O
2	m	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
{	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
len	eng	N	N	O	O

%	x	N	N	O	O
2	x	N	N	O	O
)	x	N	N	O	O

ans	eng	N	N	O	O

=	x	N	N	O	O

1	x	N	N	O	O
;	x	N	N	O	O

else	eng	N	N	O	O

ans	eng	N	N	O	O

=	x	N	N	O	O

2	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

}	x	N	N	O	O

printf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
/	x	N	N	O	O
n	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
ans	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

return	eng	N	N	O	O

0	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

