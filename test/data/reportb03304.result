The	eng	N	N	O	O

Fun	eng	N	N	O	O

Number	eng	N	N	O	O

System	eng	N	N	O	O

[	x	N	N	O	O

PKU	eng	N	Y	O	B-OJ

1023	m	N	N	O	I-OJ

]	x	N	N	O	O
_	x	N	N	O	O
青云	ns	N	N	O	O
行客	n	N	N	O	O
_	x	N	N	O	O
百度	n	N	N	O	O
空间	n	N	N	O	O

The	eng	N	N	O	O

Fun	eng	N	N	O	O

Number	eng	N	N	O	O

System	eng	N	N	O	O

Time	eng	N	N	O	O

Limit	eng	N	N	O	O
:	x	N	N	O	O

1000	m	N	N	O	O
MS	eng	N	N	O	O

Memory	eng	N	N	O	O

Limit	eng	N	N	O	O
:	x	N	N	O	O

10000	m	N	N	O	O
K	eng	N	N	O	O

Total	eng	N	N	O	O

Submissions	eng	N	N	O	O
:	x	N	N	O	O

3621	m	N	N	O	O

Accepted	eng	N	N	O	O
:	x	N	N	O	O

993	m	N	N	O	O

Description	eng	N	N	O	O

In	eng	N	N	O	O

a	x	N	N	O	O

k	x	N	N	O	O

bit	eng	N	N	O	O

2	x	N	N	O	O
'	x	N	N	O	O
s	x	N	N	O	O

complement	eng	N	N	O	O

number	eng	N	N	O	O
,	x	N	N	O	O

where	eng	N	N	O	O

the	eng	N	N	O	O

bits	eng	N	N	O	O

are	eng	N	N	O	O

indexed	eng	N	N	O	O

from	eng	N	N	O	O

0	x	N	N	O	O

to	eng	N	N	O	O

k	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
,	x	N	N	O	O

the	eng	N	N	O	O

weight	eng	N	N	O	O

of	eng	N	N	O	O

the	eng	N	N	O	O

most	eng	N	N	O	O

significant	eng	N	N	O	O

bit	eng	N	N	O	O

(	x	N	N	O	O
i	eng	N	N	O	O
.	m	N	N	O	O
e	eng	N	N	O	O
.	m	N	N	O	O
,	x	N	N	O	O

in	eng	Y	N	O	O

position	eng	N	N	O	O

k	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

is	eng	N	N	O	O

-	x	N	N	O	O
2	x	N	N	O	O
^	x	N	N	O	O
(	x	N	N	O	O
k	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

the	eng	N	N	O	O

weight	eng	N	N	O	O

of	eng	N	N	O	O

a	x	N	N	O	O

bit	eng	N	N	O	O

in	eng	Y	N	O	O

any	eng	N	N	O	O

position	eng	N	N	O	O

i	x	N	N	O	O

(	x	N	N	O	O
0	x	N	N	O	O

≤	x	N	N	O	O

i	x	N	N	O	O

<	x	N	N	O	O

k	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
)	x	N	N	O	O

is	eng	N	N	O	O

2	x	N	N	O	O
^	x	N	N	O	O
i	eng	N	N	O	O
.	m	N	N	O	O

For	eng	N	N	O	O

example	eng	N	N	O	O
,	x	N	N	O	O

a	x	N	N	O	O

3	x	N	N	O	O

bit	eng	N	N	O	O

number	eng	N	N	O	O

101	m	N	N	O	O

is	eng	N	N	O	O

-	x	N	N	O	O
2	x	N	N	O	O
^	x	N	N	O	O
2	x	N	N	O	O

+	x	N	N	O	O

0	x	N	N	O	O

+	x	N	N	O	O

2	x	N	N	O	O
^	x	N	N	O	O
0	x	N	N	O	O

=	x	N	N	O	O

-	x	N	N	O	O
3.	m	N	N	O	O

A	x	N	N	O	O

negatively	eng	N	N	O	O

weighted	eng	N	N	O	O

bit	eng	N	N	O	O

is	eng	N	N	O	O

called	eng	N	N	O	O

a	x	N	N	O	O

negabit	eng	N	N	O	O

(	x	N	N	O	O
such	eng	N	N	O	O

as	eng	Y	N	O	O

the	eng	N	N	O	O

most	eng	N	N	O	O

significant	eng	N	N	O	O

bit	eng	N	N	O	O

in	eng	Y	N	O	O

a	x	N	N	O	O

2	x	N	N	O	O
'	x	N	N	O	O
s	x	N	N	O	O

complement	eng	N	N	O	O

number	eng	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

a	x	N	N	O	O

positively	eng	N	N	O	O

weighted	eng	N	N	O	O

bit	eng	N	N	O	O

is	eng	N	N	O	O

called	eng	N	N	O	O

a	x	N	N	O	O

posibit	eng	N	N	O	O
.	m	N	N	O	O

A	x	N	N	O	O

Fun	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O

is	eng	N	N	O	O

a	x	N	N	O	O

positional	eng	N	N	O	O

binary	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O
,	x	N	N	O	O

where	eng	N	N	O	O

each	eng	N	N	O	O

bit	eng	N	N	O	O

can	eng	N	N	O	O

be	eng	Y	N	O	O

either	eng	N	N	O	O

a	x	N	N	O	O

negabit	eng	N	N	O	O
,	x	N	N	O	O

or	eng	Y	N	O	O

a	x	N	N	O	O

posibit	eng	N	N	O	O
.	m	N	N	O	O

For	eng	N	N	O	O

example	eng	N	N	O	O

consider	eng	N	N	O	O

a	x	N	N	O	O

3	x	N	N	O	O
-	x	N	N	O	O
bit	eng	N	N	O	O

fun	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O

Fun3	eng	N	N	O	O
,	x	N	N	O	O

where	eng	N	N	O	O

bits	eng	N	N	O	O

in	eng	Y	N	O	O

positions	eng	N	N	O	O

0	x	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

2	x	N	N	O	O

are	eng	N	N	O	O

posibits	eng	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

the	eng	N	N	O	O

bit	eng	N	N	O	O

in	eng	Y	N	O	O

position	eng	N	N	O	O

1	x	N	N	O	O

is	eng	N	N	O	O

a	x	N	N	O	O

negabit	eng	N	N	O	O
.	m	N	N	O	O

(	x	N	N	O	O
110	m	N	N	O	O
)	x	N	N	O	O
Fun3	eng	N	N	O	O

is	eng	N	N	O	O

evaluated	eng	N	N	O	O

as	eng	Y	N	O	O

2	x	N	N	O	O
^	x	N	N	O	O
2	x	N	N	O	O
-	x	N	N	O	O
2	x	N	N	O	O
^	x	N	N	O	O
1	x	N	N	O	O

+	x	N	N	O	O

0	x	N	N	O	O

=	x	N	N	O	O

3.	m	N	N	O	O

Now	eng	N	N	O	O

you	eng	N	N	O	O

are	eng	N	N	O	O

going	eng	N	N	O	O

to	eng	N	N	O	O

have	eng	N	N	O	O

fun	eng	N	N	O	O

with	eng	N	N	O	O

the	eng	N	N	O	O

Fun	eng	N	N	O	O

number	eng	N	N	O	O

systems	eng	N	N	O	O
!	x	N	N	O	O

You	eng	N	N	O	O

are	eng	N	N	O	O

given	eng	N	N	O	O

the	eng	N	N	O	O

description	eng	N	N	O	O

of	eng	N	N	O	O

a	x	N	N	O	O

k	x	N	N	O	O
-	x	N	N	O	O
bit	eng	N	N	O	O

Fun	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O

Funk	eng	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

an	eng	Y	N	O	O

integer	eng	N	N	O	O

N	x	N	N	O	O

(	x	N	N	O	O
possibly	eng	N	N	O	O

negative	eng	N	N	O	O
.	m	N	N	O	O

You	eng	N	N	O	O

should	eng	N	N	O	O

determine	eng	N	N	O	O

the	eng	N	N	O	O

k	x	N	N	O	O

bits	eng	N	N	O	O

of	eng	N	N	O	O

a	x	N	N	O	O

representation	eng	N	N	O	O

of	eng	N	N	O	O

N	x	N	N	O	O

in	eng	Y	N	O	O

Funk	eng	N	N	O	O
,	x	N	N	O	O

or	eng	Y	N	O	O

report	eng	N	N	O	O

that	eng	N	N	O	O

it	eng	N	N	O	O

is	eng	N	N	O	O

not	eng	N	N	O	O

possible	eng	N	N	O	O

to	eng	N	N	O	O

represent	eng	N	N	O	O

the	eng	N	N	O	O

given	eng	N	N	O	O

N	x	N	N	O	O

in	eng	Y	N	O	O

the	eng	N	N	O	O

given	eng	N	N	O	O

Funk	eng	N	N	O	O
.	m	N	N	O	O

For	eng	N	N	O	O

example	eng	N	N	O	O
,	x	N	N	O	O

a	x	N	N	O	O

representation	eng	N	N	O	O

of	eng	N	N	O	O

-	x	N	N	O	O
1	x	N	N	O	O

in	eng	Y	N	O	O

the	eng	N	N	O	O

Fun3	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O

(	x	N	N	O	O
defined	eng	N	N	O	O

above	eng	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

is	eng	N	N	O	O

011	m	N	N	O	O

(	x	N	N	O	O
evaluated	eng	N	N	O	O

as	eng	Y	N	O	O

0	x	N	N	O	O

-	x	N	N	O	O

2	x	N	N	O	O
^	x	N	N	O	O
1	x	N	N	O	O

+	x	N	N	O	O

2	x	N	N	O	O
^	x	N	N	O	O
0	x	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

representing	eng	N	N	O	O

6	x	N	N	O	O

in	eng	Y	N	O	O

Fun3	eng	N	N	O	O

is	eng	N	N	O	O

impossible	eng	N	N	O	O
.	m	N	N	O	O

Input	eng	N	N	O	O

The	eng	N	N	O	O

first	eng	N	N	O	O

line	eng	N	N	O	O

of	eng	N	N	O	O

the	eng	N	N	O	O

input	eng	N	N	O	O

file	eng	N	N	O	O

contains	eng	N	N	O	O

a	x	N	N	O	O

single	eng	N	N	O	O

integer	eng	N	N	O	O

t	x	N	N	O	O

(	x	N	N	O	O
1	x	N	N	O	O

≤	x	N	N	O	O

t	x	N	N	O	O

≤	x	N	N	O	O

10	m	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

the	eng	N	N	O	O

number	eng	N	N	O	O

of	eng	N	N	O	O

test	eng	N	N	O	O

cases	eng	N	N	O	O
,	x	N	N	O	O

followed	eng	N	N	O	O

by	eng	N	N	O	O

the	eng	N	N	O	O

input	eng	N	N	O	O

data	eng	N	N	O	O

for	eng	Y	N	O	O

each	eng	N	N	O	O

test	eng	N	N	O	O

case	eng	N	N	O	O
.	m	N	N	O	O

Each	eng	N	N	O	O

test	eng	N	N	O	O

case	eng	N	N	O	O

is	eng	N	N	O	O

given	eng	N	N	O	O

in	eng	Y	N	O	O

three	eng	N	N	O	O

consecutive	eng	N	N	O	O

lines	eng	N	N	O	O
.	m	N	N	O	O

In	eng	N	N	O	O

the	eng	N	N	O	O

first	eng	N	N	O	O

line	eng	N	N	O	O

there	eng	N	N	O	O

is	eng	N	N	O	O

a	x	N	N	O	O

positive	eng	N	N	O	O

integer	eng	N	N	O	O

k	x	N	N	O	O

(	x	N	N	O	O
1	x	N	N	O	O

≤	x	N	N	O	O

k	x	N	N	O	O

≤	x	N	N	O	O

64	m	N	N	O	O
)	x	N	N	O	O
.	x	N	N	O	O

In	eng	N	N	O	O

the	eng	N	N	O	O

second	eng	N	N	O	O

line	eng	N	N	O	O

of	eng	N	N	O	O

a	x	N	N	O	O

test	eng	N	N	O	O

data	eng	N	N	O	O

there	eng	N	N	O	O

is	eng	N	N	O	O

a	x	N	N	O	O

string	eng	N	N	O	O

of	eng	N	N	O	O

length	eng	N	N	O	O

k	x	N	N	O	O
,	x	N	N	O	O

composed	eng	N	N	O	O

only	eng	N	N	O	O

of	eng	N	N	O	O

letters	eng	N	N	O	O

n	x	N	N	O	O
,	x	N	N	O	O

and	eng	N	N	O	O

p	x	N	N	O	O
,	x	N	N	O	O

describing	eng	N	N	O	O

the	eng	N	N	O	O

Fun	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O

for	eng	Y	N	O	O

that	eng	N	N	O	O

test	eng	N	N	O	O

data	eng	N	N	O	O
,	x	N	N	O	O

where	eng	N	N	O	O

each	eng	N	N	O	O

n	x	N	N	O	O

(	x	N	N	O	O
p	x	N	N	O	O
)	x	N	N	O	O

indicates	eng	N	N	O	O

that	eng	N	N	O	O

the	eng	N	N	O	O

bit	eng	N	N	O	O

in	eng	Y	N	O	O

that	eng	N	N	O	O

position	eng	N	N	O	O

is	eng	N	N	O	O

a	x	N	N	O	O

negabit	eng	N	N	O	O

(	x	N	N	O	O
posibit	eng	N	N	O	O
)	x	N	N	O	O
.	x	N	N	O	O

The	eng	N	N	O	O

third	eng	N	N	O	O

line	eng	N	N	O	O

of	eng	N	N	O	O

each	eng	N	N	O	O

test	eng	N	N	O	O

data	eng	N	N	O	O

contains	eng	N	N	O	O

an	eng	Y	N	O	O

integer	eng	N	N	O	O

N	x	N	N	O	O

(	x	N	N	O	O
-	x	N	N	O	O
2	x	N	N	O	O
^	x	N	N	O	O
63	m	N	N	O	O

≤	x	N	N	O	O

N	x	N	N	O	O

<	x	N	N	O	O

2	x	N	N	O	O
^	x	N	N	O	O
63	m	N	N	O	O
)	x	N	N	O	O
,	x	N	N	O	O

the	eng	N	N	O	O

number	eng	N	N	O	O

to	eng	N	N	O	O

be	eng	Y	N	O	O

represented	eng	N	N	O	O

in	eng	Y	N	O	O

the	eng	N	N	O	O

Funk	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O

by	eng	N	N	O	O

your	eng	N	N	O	O

program	eng	N	N	O	O
.	m	N	N	O	O

Output	eng	N	N	O	O

For	eng	N	N	O	O

each	eng	N	N	O	O

test	eng	N	N	O	O

data	eng	N	N	O	O
,	x	N	N	O	O

you	eng	N	N	O	O

should	eng	N	N	O	O

print	eng	N	N	O	O

one	eng	N	N	O	O

line	eng	N	N	O	O

containing	eng	N	N	O	O

either	eng	N	N	O	O

a	x	N	N	O	O

k	x	N	N	O	O
-	x	N	N	O	O
bit	eng	N	N	O	O

string	eng	N	N	O	O

representing	eng	N	N	O	O

the	eng	N	N	O	O

given	eng	N	N	O	O

number	eng	N	N	O	O

N	x	N	N	O	O

in	eng	Y	N	O	O

the	eng	N	N	O	O

Funk	eng	N	N	O	O

number	eng	N	N	O	O

system	eng	N	N	O	O
,	x	N	N	O	O

or	eng	Y	N	O	O

the	eng	N	N	O	O

word	eng	N	N	O	O

Impossible	eng	N	N	O	O
,	x	N	N	O	O

when	eng	N	N	O	O

it	eng	N	N	O	O

is	eng	N	N	O	O

impossible	eng	N	N	O	O

to	eng	N	N	O	O

represent	eng	N	N	O	O

the	eng	N	N	O	O

given	eng	N	N	O	O

number	eng	N	N	O	O
.	m	N	N	O	O

Sample	eng	N	N	O	O

Input	eng	N	N	O	O

23	m	N	N	O	O
pnp64ppnn10	eng	N	N	O	O

Sample	eng	N	N	O	O

Output	eng	N	N	O	O

Impossible1110	eng	N	N	O	O

Source	eng	N	N	O	O

Tehran	eng	N	N	O	O

2002	m	N	N	O	O
,	x	N	N	O	O

First	eng	N	N	O	O

Iran	eng	N	N	O	O

Nationwide	eng	N	N	O	O

Internet	eng	N	N	O	O

Programming	eng	N	N	O	O

Contest	eng	N	N	O	O

/	x	N	N	O	O
/	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O

#	x	N	N	O	O
include	eng	N	N	O	O

<	x	N	N	O	O
stdio	eng	N	N	O	O
.	m	N	N	O	O
h	eng	N	N	O	O
>	x	N	N	O	O

int	eng	N	N	O	O

main	eng	N	N	O	O
(	x	N	N	O	O

)	x	N	N	O	O

{	x	N	N	O	O

long	eng	N	N	O	O

long	eng	N	N	O	O

n	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

cases	eng	N	N	O	O
,	x	N	N	O	O

k	x	N	N	O	O
;	x	N	N	O	O

char	eng	N	N	O	O

pn	eng	N	N	O	O
[	x	N	N	O	O
70	m	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O

&	x	N	N	O	O
cases	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

while	eng	N	N	O	O
(	x	N	N	O	O
cases	eng	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
%	x	N	N	O	O
s	x	N	N	O	O
%	x	N	N	O	O
I64d	eng	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O

&	x	N	N	O	O
k	eng	N	N	O	O
,	x	N	N	O	O

pn	eng	N	N	O	O
,	x	N	N	O	O

&	x	N	N	O	O
n	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

while	eng	N	N	O	O
(	x	N	N	O	O
k	x	N	N	O	O
-	x	N	N	O	O
-	x	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O
/	x	N	N	O	O
/	x	N	N	O	O

关键	n	N	N	O	O
是	v	N	N	O	O
直接	ad	N	N	O	O
用	p	N	N	O	O
n	eng	N	N	O	O
的	uj	N	N	O	O
二进制	n	N	N	O	O
形式	n	N	N	O	O
，	x	N	N	O	O
每次	r	N	N	O	O
判断	v	Y	N	O	O
处理	v	N	N	O	O
最后	f	N	N	O	O
一位	m	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O

n	x	N	N	O	O

&	x	N	N	O	O

0	m	N	N	O	O
x1	eng	N	N	O	O

)	x	N	N	O	O

{	x	N	N	O	O
/	x	N	N	O	O
/	x	N	N	O	O

n	x	N	N	O	O
二进制	n	N	N	O	O
形式	n	N	N	O	O
的	uj	N	N	O	O
最后	f	N	N	O	O
一位	m	N	N	O	O
为	p	N	N	O	O
1	m	N	N	O	O

n	x	N	N	O	O

+	x	N	N	O	O
=	x	N	N	O	O

(	x	N	N	O	O
pn	eng	N	N	O	O
[	x	N	N	O	O
k	x	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
=	x	N	N	O	O
'	x	N	N	O	O
p	x	N	N	O	O
'	x	N	N	O	O
)	x	N	N	O	O
?	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
:	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O

pn	eng	N	N	O	O
[	x	N	N	O	O
k	x	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
'	x	N	N	O	O
1	x	N	N	O	O
'	x	N	N	O	O
;	x	N	N	O	O
/	x	N	N	O	O
/	x	N	N	O	O

该位	r	N	N	O	O
都	d	N	N	O	O
要	v	N	N	O	O
置	v	N	N	O	O
1	m	N	N	O	O
，	x	N	N	O	O
不过	c	N	N	O	O
为	p	N	N	O	O
'	x	N	N	O	O
n	x	N	N	O	O
'	x	N	N	O	O
时	n	N	N	O	O
还要	c	N	N	O	O
进	v	N	N	O	O
1	m	N	N	O	O
位	v	N	N	O	O

}	x	N	N	O	O

else	eng	N	N	O	O

pn	eng	N	N	O	O
[	x	N	N	O	O
k	x	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
'	x	N	N	O	O
0	x	N	N	O	O
'	x	N	N	O	O
;	x	N	N	O	O

n	x	N	N	O	O

>	x	N	N	O	O
>	x	N	N	O	O
=	x	N	N	O	O

1	x	N	N	O	O
;	x	N	N	O	O
/	x	N	N	O	O
/	x	N	N	O	O

处理	v	N	N	O	O
该	r	N	N	O	O
位	q	N	N	O	O
以前	f	N	N	O	O
的	uj	N	N	O	O
位	n	N	N	O	O

}	x	N	N	O	O

puts	eng	N	N	O	O
(	x	N	N	O	O
n	x	N	N	O	O
?	x	N	N	O	O
"	x	N	N	O	O
Impossible	eng	N	N	O	O
"	x	N	N	O	O
:	x	N	N	O	O
pn	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

return	eng	N	N	O	O

0	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

/	x	N	N	O	O
*	x	N	N	O	O

算法	n	Y	N	O	O
说明	v	N	N	O	O
：	x	N	N	O	O

（	x	N	N	O	O
1	x	N	N	O	O
）	x	N	N	O	O
、	x	N	N	O	O
一个	m	N	N	O	O
符号	n	N	N	O	O
数	n	N	N	O	O
转换	v	Y	N	O	O
为	p	N	N	O	O
二进制	n	N	N	O	O
01	m	N	N	O	O
序列	n	Y	N	O	O
，	x	N	N	O	O
要	v	N	N	O	O
对应	vn	N	N	O	O
到	v	N	N	O	O
给	p	N	N	O	O
我们	r	N	N	O	O
的	uj	N	N	O	O
pn	eng	N	N	O	O
序列	n	Y	N	O	O
上	f	N	N	O	O
填充	v	N	N	O	O
01	m	N	N	O	O

（	x	N	N	O	O
2	x	N	N	O	O
）	x	N	N	O	O
、	x	N	N	O	O
一个	m	N	N	O	O
比较	d	N	N	O	O
好	a	N	N	O	O
的	uj	N	N	O	O
想法	v	N	N	O	O
是从	v	N	N	O	O
低位	n	N	N	O	O
到	v	N	N	O	O
高位	n	N	N	O	O
的	uj	N	N	O	O
逐位	n	N	N	O	O
填充	v	N	N	O	O
，	x	N	N	O	O
因为	c	N	N	O	O
最低	a	N	N	O	O
位	q	N	N	O	O
的	uj	N	N	O	O
01	m	N	N	O	O
选择	v	N	N	O	O
对应	vn	N	N	O	O
着	uz	N	N	O	O
当前	t	N	N	O	O
填充	v	N	N	O	O
数	m	N	N	O	O
的	uj	N	N	O	O
奇偶	n	N	N	O	O
，	x	N	N	O	O
是	v	N	N	O	O
唯一	b	N	N	O	O
的	uj	N	N	O	O

（	x	N	N	O	O
3	x	N	N	O	O
）	x	N	N	O	O
、	x	N	N	O	O
当	t	N	N	O	O

n	x	N	N	O	O

&	x	N	N	O	O

0	m	N	N	O	O
x1	eng	N	N	O	O

为	p	N	N	O	O
1	m	N	N	O	O
时	n	N	N	O	O
，	x	N	N	O	O
还要	c	N	N	O	O
判断	v	Y	N	O	O
pn	eng	N	N	O	O
序列	n	Y	N	O	O
：	x	N	N	O	O
当为	d	N	N	O	O
'	x	N	N	O	O
n	x	N	N	O	O
'	x	N	N	O	O
时	n	N	N	O	O
说明	v	N	N	O	O
填上	v	N	N	O	O
了	ul	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
（	x	N	N	O	O
相对	d	N	N	O	O
的	uj	N	N	O	O
位上	v	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
）	x	N	N	O	O
，	x	N	N	O	O
于是	c	N	N	O	O
要	v	N	N	O	O
加上	v	N	N	O	O
1	x	N	N	O	O
；	x	N	N	O	O
否则	c	N	N	O	O
加	v	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O

（	x	N	N	O	O
4	x	N	N	O	O
）	x	N	N	O	O
、	x	N	N	O	O
处理	v	N	N	O	O
一位	m	N	N	O	O
后	f	N	N	O	O
右移	n	N	N	O	O
一位	m	N	N	O	O
，	x	N	N	O	O
作为	v	N	N	O	O
当前	t	N	N	O	O
值	n	N	N	O	O
处理	v	N	N	O	O

*	x	N	N	O	O
/	x	N	N	O	O

