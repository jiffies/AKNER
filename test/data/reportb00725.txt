pku3233_Acer_Vagabond_新浪博客

http://acm.pku.edu.cn/JudgeOnline/problem?id=3233
大意：各一个N*N的方阵A，求S = A + A2 + A3 + … + Ak 
       其中N<=30,k<=100000000,m<=10000
算法：本想看作等比数列来做，在除的时候乘上分母的逆矩阵。可以只能过样例，WA。
      然后看了下题解，用二分优化递推。即找前k项和与前k/2项和得关系。
#include <iostream>
   using namespace std;
   int a[31][31],b[31][31],c[31][31],f[31][31],e[31][31],n,m,link;
 void multi(){
   memset(c,0,sizeof(c));
   int i,j,k;
   for(i=0;i<n;i++)
   for(j=0;j<n;j++)
   for(k=0;k<n;k++)
   c[i][j]=(c[i][j]+a[i][k]*b[k][j])%m;
 }
 void pow(int x){
   int i,j;
   if(x==1){
     for(i=0;i<n;i++)
     for(j=0;j<n;j++)c[i][j]=e[i][j];
     return;
     };
   int y=x>>1;
   pow(y);
   for(i=0;i<n;i++)
   for(j=0;j<n;j++)a[i][j]=b[i][j]=c[i][j];
   multi();
   if(y+y<x){
     for(i=0;i<n;i++)
     for(j=0;j<n;j++){a[i][j]=c[i][j];b[i][j]=e[i][j];};
     multi();
     };
 }
 void calc(int x){
   int i,j;
   if(x==1){
     for(i=0;i<n;i++)
     for(j=0;j<n;j++)f[i][j]=e[i][j];
     return;
     };
   int y=x>>1;
   calc(y);
   pow(y);
   for(i=0;i<n;i++)
   for(j=0;j<n;j++){a[i][j]=f[i][j];b[i][j]=c[i][j];};
   multi();
   for(i=0;i<n;i++)
   for(j=0;j<n;j++)f[i][j]=(f[i][j]+c[i][j])%m;
   if(y+y<x){
     pow(x);
     for(i=0;i<n;i++)
     for(j=0;j<n;j++)f[i][j]=(f[i][j]+c[i][j])%m;
     };
 }
 int main(){
  // freopen("a.in","r",stdin);freopen("a.out","w",stdout);
   scanf("%d%d%d\n",&n,&link,&m);
   int i,j,k;
   for(i=0;i<n;i++)
   for(j=0;j<n;j++){
     scanf("%d",&k);
     e[i][j]=k % m;
     };
   calc(link);
   for(i=0;i<n;i++){
     for(j=0;j<n-1;j++)cout<<f[i][j]<<' ';
     cout<<f[i][n-1]<<endl;
     };
   return 0;
 }
那个WA的程序：
#include <iostream>
 #include <cmath>
   using namespace std;
   int a[31][31],b[31][31],c[31][31],st[321][31],e[31][31],d[31][31],n,link,m;
   double nb[31][31],ne[31][31],f[31][31],err=0.000001;
 void multi(){
   memset(c,0,sizeof(c));
   int i,j,k;
   for(i=0;i<n;i++)
   for(j=0;j<n;j++)
   for(k=0;k<n;k++)c[i][j]=(c[i][j]+a[i][k]*b[k][j])%m;
 }
 void pow(int x){
   if(x==1){
     memcpy(c,st,sizeof(c));
     return;
     };
   int y=x>>1;
   pow(y);
   memcpy(a,c,sizeof(c));memcpy(b,c,sizeof(b));
   multi();
   if(y+y<x){
     memcpy(a,c,sizeof(c));
     memcpy(b,st,sizeof(b));
     multi();
     };
 }
 void print(){
   int i,j;
   for(i=0;i<n;i++){
     for(j=0;j<n;j++)cout<<ne[i][j]<<' ';
     cout<<endl;
     };
 }
 int main(){
   freopen("a.in","r",stdin);freopen("a.out","w",stdout);
   scanf("%d%d%d\n",&n,&link,&m);
   int i,j,k;
   memset(e,0,sizeof(e));
   for(i=0;i<n;i++)e[i][i]=1;
   for(i=0;i<n;i++)
   for(j=0;j<n;j++){
     scanf("%d",&st[i][j]);
     st[i][j]%=m;
     };
   if(link==0){
     for(i=0;i<n;i++){
       for(j=0;j<n-1;j++)cout<<e[i][j]<<' ';
       cout<<e[i][n-1]<<endl;
       };
     return 0;
     };
   pow(link);
   memcpy(a,st,sizeof(a));
   for(i=0;i<n;i++)
   for(j=0;j<n;j++)b[i][j]=(e[i][j]-c[i][j]+m)%m;
   multi();
   double x,y;
   for(i=0;i<n;i++)
   for(j=0;j<n;j++){
     k=e[i][j]-st[i][j];
     nb[i][j]=(double)k;
     ne[i][j]=(double)e[i][j];
     };
   for(k=0;k<n-1;k++){
     i=k;
     while(i<n&&fabs(nb[i][k])<err)i++;
     if(i>=n){cout<<"SB!"<<endl;break;};
     for(j=0;j<n;j++){
       x=nb[i][j];nb[i][j]=nb[k][j];nb[k][j]=x;
       x=ne[i][j];ne[i][j]=ne[k][j];ne[k][j]=x;
       };
     x=nb[k][k];
     for(j=0;j<n;j++){
       nb[k][j]/=x;
       ne[k][j]/=x;
       };
     for(i=k+1;i<n;i++){
       x=nb[i][k];
       for(j=0;j<n;j++){
         nb[i][j]=nb[i][j]-nb[k][j]*x;
         ne[i][j]=ne[i][j]-ne[k][j]*x;
         };
       };
     };
   for(j=0;j<n;j++)ne[n-1][j]/=nb[n-1][n-1];
   nb[n-1][n-1]=1.0;
   for(k=n;k>0;k--)
   for(i=k-1;i>-1;i--){
     x=nb[i][k];
     for(j=0;j<n;j++){
       nb[i][j]=nb[i][j]-nb[k][j]*x;
       ne[i][j]=ne[i][j]-ne[k][j]*x;
       };
     };
   print();
   for(i=0;i<n;i++)
   for(j=0;j<n;j++)nb[i][j]=(double)c[i][j];
   for(i=0;i<n;i++)
   for(j=0;j<n;j++){
     f[i][j]=0.0;
     for(k=0;k<n;k++)f[i][j]=f[i][j]+ne[i][k]*nb[k][j];
     };
   for(i=0;i<n;i++)
   for(j=0;j<n;j++){
     c[i][j]=(int)f[i][j];
     c[i][j]=c[i][j]%m;
     c[i][j]=(c[i][j]+m)%m;
     };
   for(i=0;i<n;i++){
     for(j=0;j<n-1;j++)cout<<c[i][j]<<' ';
     cout<<c[i][n-1]<<endl;
     };
   return 0;
 }   
