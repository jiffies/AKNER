Pku1868 Antiarithmetic? - cristiano_faith的日志 - 网易博客

 
Description
A permutation of n is a bijective function of the initial n natural numbers: 0, 1, ... n-1. A permutation p is called antiarithmetic if there is no subsequence of it forming an arithmetic progression of length bigger than 2, i.e. there are no three indices 0 <= i < j < k < n such that (pi , pj , pk) forms an arithmetic progression. 
For example, the sequence (2, 0, 1, 4, 3) is an antiarithmetic permutation of 5. The sequence (0, 5, 4, 3, 1, 2) is not an antiarithmetic permutation as its first, fifth and sixth term (0, 1, 2) form an arithmetic progression; and so do its second, forth and fifth term (5, 3, 1). 
Your task is to check whether a given permutation of n is antiarithmetic. 
 
Input
There are several test cases, followed by a line containing 0. Each test case is a line of the input file containing a natural number 3 <= n <= 10000 followed by a colon and then followed by n distinct numbers separated by whitespace. All n numbers are natural numbers smaller than n. 
 
Output
For each test case output one line with yes or no stating whether the permutation is antiarithmetic or not. 
 
Sample Input

3: 0 2 1   5: 2 0 1 3 4  6: 2 4 3 5 0 1  0   
Sample Output

yes  no  yes   
Source
Waterloo local 2004.09.25
 
题意：给出整数n的1~n-1的排列，若排列中按顺序出现等差数列，则输出NO，否则yes
 
思路：输入排列时，每输入一个数用num数组记录其位置下标，若出现等差数列，0<=i<j<k<n，则num[k]>num[j]>num[i]||num[k]<num[j]<num[i]

My code：
 #include <stdio.h >
 int num[10003]={0};
 int n;
 int i;
 int j;
 int k;
 int temp;
int solve()
 {
     for (i=0;i<=n-2;i++)
     {
         for (j=i+1;j<=(n+i)/2;j++)
         {
             k=j+j-i;
             if (k>=n)
             {
                 break;
             }
             else if((num[k]>num[j]&&num[j]>num[i])||(num[k]<num[j]&&num[j]<num[i]))
             {
                 return 1;
             }
         }
     }
     return 0;
 }
 int main()
 {
    while (1)
     {
         scanf("%d:",&n);
         if (n==0)
         {
             break;
         }
         memset(num,0,sizeof(num));
         for (i=0;i<n;i++)
         {
             scanf("%d",&temp);
             num[temp]=i;
         }
         if (solve())
             printf("no\n");
         else
             printf("yes\n");
     }
    return 0;
 } 
 
