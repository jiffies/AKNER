PKU 1090 Chain_Thinker's paradise_百度空间

                                                       Chain 
Time Limit: 1000MS 
Memory Limit: 10000K 
Total Submissions: 1759 
Accepted: 597 

Description
Byteland had not always been a democratic country. There were also black pages in its book of history. One lovely day general Bytel − commander of the junta which had power over Byteland −− decided to finish the long−lasting time of war and released imprisoned activists of the opposition. However, he had no intention to let the leader Bytesar free. He decided to chain him to the wall with the bytish chain. It consists of joined rings and the bar fixed to the wall. Although the rings are not joined with the bar, it is hard to take them off. 

'General, why have you chained me to the prison walls and did not let rejoice at freedom!' cried Bytesar. 

'But Bytesar, you are not chained at all, and I am certain you are able to take off the rings from the bar by yourself.' perfidiously answered general Bytel, and he added 'But deal with that before a clock strikes the cyber hour and do not make a noise at night, otherwise I will be forced to call Civil Cyber Police.' 

Help Bytesar! Number the following rings of the chain with integers 1,2,...,n. We may put on and take off these rings according to the following rules: 

.only one ring can be put on or taken off from the bar in one move, 

.the ring number 1 can be always put on or taken off from the bar, 

.if the rings with the numbers 1,...,k−1 (for 1<= k < n) are taken off from the bar and the ring number k is put on, we can put on or take off the ring number k+1. 

Write a program which: 

.reads from std input the description of the bytish chain, 

.computes minimal number of moves necessary to take off all rings of the bytish chain from the bar, 

.writes the result to std output.

Input
In the first line of the input there is written one integer n, 1 <= n <= 1000. In the second line there are written n integers o1,o2,...,on (each of them is either 0 or 1) separated by single spaces. If oi=1, then the i−th ring is put on the bar, and if oi=0, then the i−th ring is taken off the bar.

Output
The output should contain exactly one integer equal to the minimal number of moves necessary to take off all the rings of the bytish chain from the bar.

Sample Input
41 0 1 0

Sample Output
6

Source

POI 2001

Source Code
 
Problem: 
1090 
User: *** 
Memory: 220K 
Time: 47MS 
Language: C++ 
Result: Accepted 
 
 Source Code #include<iostream>using namespace std;int main(){ short link[1001]={0}; short a[340]={1,0},b[340]={0}; int N,i; cin>>N; for(i=0;i<N;i++) cin>>link[i]; while(!link[N--]); N++; for(i=N;i>=0;i--) link[i]=(link[i]+link[i+1])%2; /*以下为大数运算，效率不高，但较易编写*/ i=0; int u=1; int v=1; int m=0,n=0; while(i<=N) { m=n=0; if(i>=1) { for(int j=0;j<u;j++) { m=a[j]*2+n; a[j]=m%10; n=m/10; } if(n) { a[u]=n; u++; } } if(link[i]) { m=n=0; v=v>u?v:u; for(int j=0;j<v;j++) { m=a[j]+b[j]+n; b[j]=m%10; n=m/10; } if(n) { b[v]=n; v++; } } i++; } for(i=v-1;i>=0;i--) cout<<b[i]; cout<<endl; return 0;} 
