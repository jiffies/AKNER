poj 3333_foreverlin_百度空间

#include<iostream>

using namespace std;

int n,sum;

//dfs,从1到n有序的检查 dfs

//这么想如果能回到比当前小的编号，那当然回去划算啦

//如果这点的跳跃点比当前大，且值比顺序走又多肯定不会选择跳跃 

typedef struct Node

{

    int d;//正常的查询 

    int td;//玩trick了他检查所需的时间

    int tc;//到下个房间去    

    }Node;

Node num[101]; 

bool s[101]; 

int b[101];

void dfs(int x,int c)

{

     if(x==n+1)

     {        

        if(c>sum)sum=c;

        return ;       

        }

     if(!s[x])

     {

        s[x]=1;      

        if((num[x].tc<x)||(b[num[x].tc]+num[x].d-b[x]-num[num[x].tc].d<num[x].td))      

        {

           dfs(num[x].tc,c+num[x].td);                                        

           }

        s[x]=0;         

        }

     if(s[x]==1||num[x].tc>=x)       

     {

        dfs(x+1,c+num[x].d); 

        }      

     } 

int main()

{

    int i,j,k,t;

    scanf("%d",&t);

    while(t--)

    {

          scanf("%d",&n);    

          for(i=1;i<=n;i++)

          {

              scanf("%d%d%d",&num[i].d,&num[i].td,&num[i].tc);

              s[i]=0;             

              }

          b[1]=0;        

          for(i=2;i<=n;i++)//记录顺序找的代价 

          {

              b[i]=b[i-1]+num[i-1].d;             

              }

          sum=0;

          dfs(1,0);

          printf("%d\n",sum);            

          }

    return 0;

    }

