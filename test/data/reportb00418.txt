poj 2013 Symmetric Order - martinblack954的日志 - 网易博客

题目链接：http://poj.org/problem?id=2013
题意：有一个按长度从小到大排列的单词列表，现需要对这个列表的单词进行二次排序。排序规则是，原序列单词两个两个分成一组。然后第一组的第一个单词为新序列的整数第一个单词，第二个单词为新序列的倒数第一个单词；第二组的第一个单词为新序列的整数第二个单词，第二个单词为新序列的倒数第二个单词，以此类推。问该单词列表二次排序后的序列。
思路：模拟。按题目描述的二次排序方式，用一个循环变量直接正数倒数去进行二次赋值即可。
PS：我实现的时候，以为输入是无序的，还冒泡排序了一下。。。- -
#include "stdio.h"
#include "malloc.h"
#include "string.h"
#include <algorithm>
using namespace std;
#define M 18
char *s[M];
int n;
void bub()
{
 int i,j;
 char *t;
 for(i=0;i<n;i++)
 {
  for(j=0;j<n-i-1;j++)
  {
   if(strlen(s[j])>strlen(s[j+1]))
   {
    t=s[j],s[j]=s[j+1],s[j+1]=t;
   }
  }
 }
}
int main()
{
 int i,t=1,j,m;
 char *s2[M],str[M*2];
 while(scanf("%d",&n)>0&&n>0)
 {
  for(i=0;i<n;i++)
  {
   free(s[i]);
   scanf("%s",str);
   s[i]=(char *)malloc((strlen(str)+1)*sizeof(char));
   for(j=0;j<=strlen(str);j++)
    s[i][j]=str[j];
  }
  //bub();
  for(i=0;i<n/2;i++)
  {
   s2[i]=s[i*2];
   s2[n-i-1]=s[i*2+1];
  }
  if(n%2==1)
   s2[n/2]=s[n-1];
  printf("SET %d\n",t);
  t++;
  for(i=0;i<n;i++)
  {
   printf("%s\n",s2[i]);
  }
 }
 return 0;
}
