poj 3279 Fliptile_chenwenwen0210_百度空间

题目大意：老题目了，就是给你N*M的0，1矩阵，要求对其中的某些格子进行操作，使得所有的格子变成0，
解题报告：n,m比较小，可以通过枚举第一行的操作情况，因为第一行操作完之后，某些不是0，必须要通过第二行的来操作，这样就可以确定了第二行的情况，这样一行一行推。复杂度2^m*(n*m)

#include<stdio.h>
#include<math.h>
#include<string.h>
#include<algorithm>
using namespace std;
typedef __int64 lld;
const int MAX=16;
const lld MOD=1000007;
const int INF=1000000001;
const double PI=acos(-1.0);
const double EPS=1.0e-8;
const int dir[4][2]={{1,0},{0,1},{-1,0},{0,-1}};
int ans[MAX][MAX];
int tmp[MAX][MAX];
int save[MAX][MAX];
int cur[MAX][MAX];
int count(int a[MAX][MAX],int n,int m)
{
    int cnt=0;
    for(int i=0;i<n;i++)for(int j=0;j<m;j++)cnt+=a[i][j];
    return cnt;
}
int cmp(int n,int m)
{
    int i,j;
    int cb=count(ans,n,m);
    int ca=count(tmp,n,m);
    if(ca<cb)return -1;
    else if(ca>cb)return 1;
    for(i=0;i<n;i++)for(j=0;j<m;j++)
    {
        if(tmp[i][j]!=ans[i][j])return tmp[i][j]-ans[i][j];
    }
    return 0;
}
void cpy(int a[MAX][MAX],int b[MAX][MAX],int n,int m)
{
    int i,j;
    for(i=0;i<n;i++)for(j=0;j<m;j++)a[i][j]=b[i][j];
}
bool flip(int n,int m,int s)
{
    int i,j;
    for(i=0;i<m;i++)
    {
        if((1<<i)&s)
        {
            tmp[0][i]=1;
            cur[0][i]^=1;
            if(i>0)  cur[0][i-1]^=1;
            if(i+1<m)cur[0][i+1]^=1;
            if(1<n)cur[1][i]^=1;
        }
        else tmp[0][i]=0;
    }
    for(i=1;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(cur[i-1][j])
            {
                tmp[i][j]=1;
                cur[i-1][j]^=1;
                cur[i][j]^=1;
                if(j>0)cur[i][j-1]^=1;
                if(j+1<m)cur[i][j+1]^=1;
                if(i+1<n)cur[i+1][j]^=1;
            }
            else tmp[i][j]=0;
        }
    }
    for(j=0;j<m;j++)if(cur[n-1][j])return false;
    return true;
}
int main()
{
    int n,m,i,j;
    while(scanf("%d%d",&n,&m)!=EOF)
    {
        for(i=0;i<n;i++)for(j=0;j<m;j++)
        {
            scanf("%d",&save[i][j]);
            ans[i][j]=1;
        }
        bool flag=false;
        for(i=0;i<(1<<m);i++)
        {
            cpy(cur,save,n,m);
            if(flip(n,m,i))
            {
                flag=true;
                if(cmp(n,m)<0)
                {
                    cpy(ans,tmp,n,m);
                }
            }
        }
        if(flag)
        {
            for(i=0;i<n;i++)
            {
                for(j=0;j<m;j++)
                {
                    if(j)putchar(' ');
                    putchar('0'+ans[i][j]);
                }
                puts("");
            }
        }
        else puts("IMPOSSIBLE");
    }
    return 0;
}
/*
100 0 0 0
100 22 0  0
100 35 25 -10.5
10  90 25 -28
0 0 0 0
*/

