pku	eng	N	Y	O	B-OJ

3140	m	N	N	O	I-OJ
_	x	N	N	O	O
chenjiang	eng	N	N	O	O
_	x	N	N	O	O
百度	n	N	N	O	O
空间	n	N	N	O	O

题意	n	N	N	O	O
：	x	N	N	O	O
有	v	N	N	O	O
一棵树	ns	N	N	O	O
，	x	N	N	O	O
数	m	N	N	O	O
的	uj	N	N	O	O
每个	r	N	N	O	O
节点	n	N	N	O	O
有	v	N	N	O	O
一个	m	N	N	O	O
权值	n	N	N	O	O
，	x	N	N	O	O
删去	v	N	N	O	O
树中	s	N	N	O	O
的	uj	N	N	O	O
一条	m	N	N	O	O
边	d	N	N	O	O
，	x	N	N	O	O
得到	v	N	N	O	O
两	m	N	N	O	O
部分	n	Y	N	O	O
，	x	N	N	O	O
求	v	N	N	O	O
这	r	N	N	O	O
两	m	N	N	O	O
部分	n	Y	N	O	O
权值	n	N	N	O	O
和	c	N	N	O	O
的	uj	N	N	O	O
差	n	N	N	O	O
最少	d	N	N	O	O
是	v	N	N	O	O
多少	m	N	N	O	O

思路	n	N	N	O	O
：	x	N	N	O	O
树形	n	Y	N	O	O
DP	eng	N	N	O	B-KNOWLEDGE
，	x	N	N	O	O
递归	v	Y	N	O	B-KNOWLEDGE
建树	n	Y	N	O	O
并	c	N	N	O	O
求出	v	N	N	O	O
树中	s	N	N	O	O
每个	r	N	N	O	O
节点	n	N	N	O	O
root	eng	N	N	O	O
所属	b	N	N	O	O
子树	n	N	N	O	O
的	uj	N	N	O	O
权值	n	N	N	O	O
和	c	N	N	O	O
，	x	N	N	O	O
然后	c	N	N	O	O
求	v	N	N	O	O
每个	r	N	N	O	O
节点	n	N	N	O	O
删除	v	N	N	O	O
他	r	N	N	O	O
和	c	N	N	O	O
孩子	n	N	N	O	O
节点	n	N	N	O	O
后	f	N	N	O	O
分成	v	N	N	O	O
的	uj	N	N	O	O
两	m	N	N	O	O
部分	n	Y	N	O	O
的	uj	N	N	O	O
权值	n	N	N	O	O
差	n	N	N	O	O
，	x	N	N	O	O
求	v	N	N	O	O
的	uj	N	N	O	O
最小	a	Y	N	O	O
那个	r	N	N	O	O
就行了	l	N	N	O	O

const	eng	N	N	O	O

double	eng	N	N	O	O

PI	eng	N	N	O	O

=	x	N	N	O	O

acos	eng	N	N	O	O
(	x	N	N	O	O
-	x	N	N	O	O
1.0	m	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

const	eng	N	N	O	O

double	eng	N	N	O	O

eps	eng	N	N	O	O

=	x	N	N	O	O

1	m	N	N	O	O
e	eng	N	N	O	O
-	x	N	N	O	O
11	m	N	N	O	O
;	x	N	N	O	O

#	x	N	N	O	O
define	eng	N	N	O	O

_	x	N	N	O	O
max	eng	N	N	O	O

100005	m	N	N	O	O

int	eng	N	N	O	O

head	eng	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

head0	eng	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

struct	eng	N	N	O	O

node	eng	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

to	eng	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

next	eng	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O
edge	eng	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
*	x	N	N	O	O
20	m	N	N	O	O
]	x	N	N	O	O
,	x	N	N	O	O
edge0	eng	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

e	eng	N	N	O	O
_	x	N	N	O	O
num0	eng	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

e	eng	N	N	O	O
_	x	N	N	O	O
num	eng	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

n	x	N	N	O	O
,	x	N	N	O	O
m	x	N	N	O	O
;	x	N	N	O	O

__	x	N	N	O	O
int64	eng	N	N	O	O

sum	eng	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

a	x	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

__	x	N	N	O	O
int64	eng	N	N	O	O

num	eng	N	N	O	O
;	x	N	N	O	O

__	x	N	N	O	O
int64	eng	N	N	O	O

ans	eng	N	N	O	O
;	x	N	N	O	O

bool	eng	N	N	O	O

visited	eng	N	N	O	O
[	x	N	N	O	O
_	x	N	N	O	O
max	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

__	x	N	N	O	O
int64	eng	N	N	O	O

labs	eng	N	N	O	O
(	x	N	N	O	O
__	x	N	N	O	O
int64	eng	N	N	O	O

k	x	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
k	x	N	N	O	O
>	x	N	N	O	O
=	x	N	N	O	O
0	x	N	N	O	O
)	x	N	N	O	O
return	eng	N	N	O	O

k	x	N	N	O	O
;	x	N	N	O	O

else	eng	N	N	O	O

return	eng	N	N	O	O

-	x	N	N	O	O
k	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

void	eng	N	N	O	O

add	eng	N	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

from	eng	N	N	O	O
,	x	N	N	O	O
int	eng	N	N	O	O

to	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

e	eng	N	N	O	O
_	x	N	N	O	O
num	eng	N	N	O	O
++	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

i	x	N	N	O	O
=	x	N	N	O	O
e	eng	N	N	O	O
_	x	N	N	O	O
num	eng	N	N	O	O
;	x	N	N	O	O

edge	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
to	eng	N	N	O	O
=	x	N	N	O	O
to	eng	N	N	O	O
;	x	N	N	O	O

edge	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
next	eng	N	N	O	O
=	x	N	N	O	O
head	eng	N	N	O	O
[	x	N	N	O	O
from	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

head	eng	N	N	O	O
[	x	N	N	O	O
from	eng	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
i	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

void	eng	N	N	O	O

add0	eng	N	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

from	eng	N	N	O	O
,	x	N	N	O	O
int	eng	N	N	O	O

to	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

e	eng	N	N	O	O
_	x	N	N	O	O
num0	eng	N	N	O	O
++	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

i	x	N	N	O	O
=	x	N	N	O	O
e	eng	N	N	O	O
_	x	N	N	O	O
num0	eng	N	N	O	O
;	x	N	N	O	O

edge0	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
to	eng	N	N	O	O
=	x	N	N	O	O
to	eng	N	N	O	O
;	x	N	N	O	O

edge0	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
next	eng	N	N	O	O
=	x	N	N	O	O
head0	eng	N	N	O	O
[	x	N	N	O	O
from	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

head0	eng	N	N	O	O
[	x	N	N	O	O
from	eng	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
i	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

void	eng	N	N	O	O

Build	eng	N	N	O	O
_	x	N	N	O	O
Tree	eng	N	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

root	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

i	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
i	x	N	N	O	O
=	x	N	N	O	O
head	eng	N	N	O	O
[	x	N	N	O	O
root	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O
!	x	N	N	O	O
=	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O
=	x	N	N	O	O
edge	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
next	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

son	eng	N	N	O	O
=	x	N	N	O	O
edge	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
to	eng	N	N	O	O
;	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
visited	eng	N	N	O	O
[	x	N	N	O	O
son	eng	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
continue	eng	N	N	O	O
;	x	N	N	O	O

visited	eng	N	N	O	O
[	x	N	N	O	O
son	eng	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O

add0	eng	N	N	O	O
(	x	N	N	O	O
root	eng	N	N	O	O
,	x	N	N	O	O
son	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

Build	eng	N	N	O	O
_	x	N	N	O	O
Tree	eng	N	N	O	O
(	x	N	N	O	O
son	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

sum	eng	N	N	O	O
[	x	N	N	O	O
root	eng	N	N	O	O
]	x	N	N	O	O
+	x	N	N	O	O
=	x	N	N	O	O
sum	eng	N	N	O	O
[	x	N	N	O	O
son	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

}	x	N	N	O	O

void	eng	N	N	O	O

dfs	eng	Y	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

root	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

i	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
i	x	N	N	O	O
=	x	N	N	O	O
head0	eng	N	N	O	O
[	x	N	N	O	O
root	eng	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O
!	x	N	N	O	O
=	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O
=	x	N	N	O	O
edge0	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
next	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

son	eng	N	N	O	O
=	x	N	N	O	O
edge0	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
.	m	N	N	O	O
to	eng	N	N	O	O
;	x	N	N	O	O

ans	eng	N	N	O	O
=	x	N	N	O	O
min	eng	N	N	O	O
(	x	N	N	O	O
ans	eng	N	N	O	O
,	x	N	N	O	O
labs	eng	N	N	O	O
(	x	N	N	O	O
num	eng	N	N	O	O
-	x	N	N	O	O
sum	eng	N	N	O	O
[	x	N	N	O	O
son	eng	N	N	O	O
]	x	N	N	O	O
-	x	N	N	O	O
sum	eng	N	N	O	O
[	x	N	N	O	O
son	eng	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

dfs	eng	Y	N	O	O
(	x	N	N	O	O
son	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

}	x	N	N	O	O

int	eng	N	N	O	O

main	eng	N	N	O	O
(	x	N	N	O	O
int	eng	N	N	O	O

argc	eng	N	N	O	O
,	x	N	N	O	O

char	eng	N	N	O	O
*	x	N	N	O	O
*	x	N	N	O	O

argv	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

i	x	N	N	O	O
,	x	N	N	O	O
j	x	N	N	O	O
;	x	N	N	O	O

int	eng	N	N	O	O

ca	eng	Y	N	O	O
=	x	N	N	O	O
0	x	N	N	O	O
;	x	N	N	O	O

while	eng	N	N	O	O
(	x	N	N	O	O
scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
&	x	N	N	O	O
n	eng	N	N	O	O
,	x	N	N	O	O
&	x	N	N	O	O
m	eng	N	N	O	O
)	x	N	N	O	O
!	x	N	N	O	O
=	x	N	N	O	O
EOF	eng	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
n	x	N	N	O	O
=	x	N	N	O	O
=	x	N	N	O	O
0	m	N	N	O	O
&&	x	N	N	O	O
m	eng	N	N	O	O
=	x	N	N	O	O
=	x	N	N	O	O
0	x	N	N	O	O
)	x	N	N	O	O
break	eng	N	N	O	O
;	x	N	N	O	O

num	eng	N	N	O	O
=	x	N	N	O	O
0	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
i	x	N	N	O	O
=	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O
<	x	N	N	O	O
=	x	N	N	O	O
n	x	N	N	O	O
;	x	N	N	O	O
i	eng	N	N	O	O
++	x	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
&	x	N	N	O	O
a	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

num	eng	N	N	O	O
+	x	N	N	O	O
=	x	N	N	O	O
a	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

sum	eng	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
a	x	N	N	O	O
[	x	N	N	O	O
i	x	N	N	O	O
]	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

e	eng	N	N	O	O
_	x	N	N	O	O
num	eng	N	N	O	O
=	x	N	N	O	O
0	x	N	N	O	O
;	x	N	N	O	O

memset	eng	N	N	O	O
(	x	N	N	O	O
head	eng	N	N	O	O
,	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
,	x	N	N	O	O
sizeof	eng	N	N	O	O
(	x	N	N	O	O
head	eng	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

for	eng	Y	N	O	O
(	x	N	N	O	O
i	x	N	N	O	O
=	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O
i	x	N	N	O	O
<	x	N	N	O	O
=	x	N	N	O	O
m	x	N	N	O	O
;	x	N	N	O	O
i	eng	N	N	O	O
++	x	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

int	eng	N	N	O	O

from	eng	N	N	O	O
,	x	N	N	O	O
to	eng	N	N	O	O
;	x	N	N	O	O

scanf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
%	x	N	N	O	O
d	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
&	x	N	N	O	O
from	eng	N	N	O	O
,	x	N	N	O	O
&	x	N	N	O	O
to	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

add	eng	N	N	O	O
(	x	N	N	O	O
from	eng	N	N	O	O
,	x	N	N	O	O
to	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

add	eng	N	N	O	O
(	x	N	N	O	O
to	eng	N	N	O	O
,	x	N	N	O	O
from	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

if	eng	N	N	O	O
(	x	N	N	O	O
n	x	N	N	O	O
=	x	N	N	O	O
=	x	N	N	O	O
1	x	N	N	O	O
)	x	N	N	O	O

{	x	N	N	O	O

printf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
Case	eng	N	N	O	O

%	x	N	N	O	O
d	x	N	N	O	O
:	x	N	N	O	O

%	x	N	N	O	O
d	x	N	N	O	O
\	x	N	N	O	O
n	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
++	x	N	N	O	O
ca	eng	Y	N	O	O
,	x	N	N	O	O
a	x	N	N	O	O
[	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

continue	eng	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

memset	eng	N	N	O	O
(	x	N	N	O	O
visited	eng	N	N	O	O
,	x	N	N	O	O
0	x	N	N	O	O
,	x	N	N	O	O
sizeof	eng	N	N	O	O
(	x	N	N	O	O
visited	eng	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

visited	eng	N	N	O	O
[	x	N	N	O	O
1	x	N	N	O	O
]	x	N	N	O	O
=	x	N	N	O	O
1	x	N	N	O	O
;	x	N	N	O	O

memset	eng	N	N	O	O
(	x	N	N	O	O
head0	eng	N	N	O	O
,	x	N	N	O	O
-	x	N	N	O	O
1	x	N	N	O	O
,	x	N	N	O	O
sizeof	eng	N	N	O	O
(	x	N	N	O	O
head0	eng	N	N	O	O
)	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

e	eng	N	N	O	O
_	x	N	N	O	O
num0	eng	N	N	O	O
=	x	N	N	O	O
0	x	N	N	O	O
;	x	N	N	O	O

Build	eng	N	N	O	O
_	x	N	N	O	O
Tree	eng	N	N	O	O
(	x	N	N	O	O
1	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

ans	eng	N	N	O	O
=	x	N	N	O	O
(	x	N	N	O	O
long	eng	N	N	O	O

long	eng	N	N	O	O
)	x	N	N	O	O

INT	eng	N	N	O	O
_	x	N	N	O	O
MAX	eng	N	N	O	O

*	x	N	N	O	O

(	x	N	N	O	O
long	eng	N	N	O	O

long	eng	N	N	O	O
)	x	N	N	O	O

10000	m	N	N	O	O
;	x	N	N	O	O

dfs	eng	Y	N	O	O
(	x	N	N	O	O
1	x	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

printf	eng	N	N	O	O
(	x	N	N	O	O
"	x	N	N	O	O
Case	eng	N	N	O	O

%	x	N	N	O	O
d	x	N	N	O	O
:	x	N	N	O	O

%	x	N	N	O	O
I64d	eng	N	N	O	O
\	x	N	N	O	O
n	x	N	N	O	O
"	x	N	N	O	O
,	x	N	N	O	O
++	x	N	N	O	O
ca	eng	Y	N	O	O
,	x	N	N	O	O
ans	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

return	eng	N	N	O	O

(	x	N	N	O	O
EXIT	eng	N	N	O	O
_	x	N	N	O	O
SUCCESS	eng	N	N	O	O
)	x	N	N	O	O
;	x	N	N	O	O

}	x	N	N	O	O

